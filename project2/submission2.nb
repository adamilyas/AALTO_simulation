(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    318779,       6984]
NotebookOptionsPosition[    308766,       6833]
NotebookOutlinePosition[    309308,       6853]
CellTagsIndexPosition[    309265,       6850]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["Assignment 2\nELEC-E7460 Modeling and Simulation, \
fall 2018\nAdam Ilyas 725819", "Title"]], "Text",
 CellChangeTimes->{{3.752148117111442*^9, 
  3.752148125183563*^9}},ExpressionUUID->"b5259b61-7913-4f0e-b51a-\
61043a80bcab"],

Cell[CellGroupData[{

Cell["Question 1 single-class M/G/1 PS queue.  a)", "Section",
 CellChangeTimes->{{3.752149151932796*^9, 3.7521491562272863`*^9}, {
  3.752150176500021*^9, 
  3.752150176796008*^9}},ExpressionUUID->"d1189b23-1956-46f6-9fb1-\
d8605795aa86"],

Cell["\<\
Consider the single-class M/G/1 PS queue. 

Assume first that the service times are exponentially distributed with mean 1. 

Simulate the system for \[Lambda] = {0.2, 0.5, 0.8} and estimate the mean \
delay of the jobs. 

Also, determine the 95% confidence intervals.\
\>", "Text",
 CellChangeTimes->{{3.752148139353979*^9, 3.7521481543195877`*^9}, {
  3.7521491590848627`*^9, 
  3.7521491595473213`*^9}},ExpressionUUID->"4b8069bb-f7e0-49b5-a4d3-\
ae90d9e35ed0"],

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatorPS", "[", 
   RowBox[{"la_", ",", "mu_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simTime", ",", "res", ",", "state", ",", "meanqlen", ",", "prevEvTime", 
      ",", "nextArr", ",", "nextDep", ",", "joblist", ",", "delsum", ",", 
      "nofsamples", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initialisatiom", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Draw", " ", "the", " ", "arrival", " ", "time", " ", "from", " ", 
       "exponential", " ", "distribution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nextArr", "=", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"set", " ", "X_", "0", " ", 
        RowBox[{"(", 
         RowBox[{"queue", " ", "length"}], ")"}]}], " ", "=", " ", "0"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"joblist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"delsum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", 
                RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                  RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"joblist", "=", 
              RowBox[{"{", "}"}]}]}], " ", 
            RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"process", " ", "arrival", " ", "event"}], ",", " ", 
             RowBox[{
             "insert", " ", "new", " ", "job", " ", "in", " ", "job", " ", 
              "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{"{", 
               RowBox[{"simTime", ",", 
                RowBox[{"RandomVariate", "[", 
                 RowBox[{"ExponentialDistribution", "[", "mu", "]"}], "]"}]}],
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "sort", " ", "joblist", " ", "based", " ", "on", " ", "remaining",
              " ", "service", " ", "time"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"generate", " ", "new", " ", "arrival", " ", "event"}], 
             ",", " ", 
             RowBox[{"and", " ", "departure", " ", "event"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"nextArr", "=", 
            RowBox[{"simTime", "+", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextDep"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
             RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"joblist", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"joblist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"simTime", ">", "iniTrans"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"delsum", "+=", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nofsamples", "++"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"delete", " ", "departing", " ", "job"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"joblist", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"generate", " ", "new", " ", "departure", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "joblist", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"ouput", " ", "results"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanqlen", "/", 
        RowBox[{"(", 
         RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
       RowBox[{"delsum", "/", "nofsamples"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.752148160142664*^9, 3.752148161190043*^9}, {
  3.752148194855402*^9, 3.752148203827076*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"7091be15-9421-46d6-9251-3b27fa9e59b9"],

Cell["\<\
Service time ~ Exp(mu = 1)
Arrival time ~Exp(\[Lambda] )

Simulate the system for \[Lambda] = {0.2, 0.5, 0.8} and estimate the mean \
delay of the jobs. \
\>", "Text",
 CellChangeTimes->{{3.75214824541201*^9, 
  3.752148314836092*^9}},ExpressionUUID->"2595ac15-118f-45df-a817-\
5e0b0e9de5c9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "lambdas", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"la", " ", "=", " ", 
     RowBox[{"lambdas", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPS", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``\>\"", 
       ",", "la", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.752149011041113*^9, 3.752149087339674*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"08740fb3-1905-4a7e-9d25-8aac31a414d8"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.2`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.2577\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.245393433836307`\\\", \\\
\",\\\", \\\"1.2699186114910284`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.2, 
   NumberForm[1.2576560226636677`, 5], {1.245393433836307, 
   1.2699186114910284`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521490586183643`*^9, 3.752149091340666*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"7cb9c492-de6f-4586-abbb-b2574b6bba7d"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.9946\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.9487716157190302`\\\", \
\\\",\\\", \\\"2.04039467357472`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.5, 
   NumberForm[1.9945831446468751`, 5], {1.9487716157190302`, 
   2.04039467357472}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521490586183643`*^9, 3.7521490937995377`*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"d1d22e21-b89b-4ade-980c-d44f024c36eb"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.8`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"4.9683\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"4.764855110364084`\\\", \\\
\",\\\", \\\"5.171721730881692`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.8, 
   NumberForm[4.968288420622888, 5], {4.764855110364084, 5.171721730881692}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521490586183643`*^9, 3.752149100328484*^9},
 CellLabel->
  "During evaluation of \
In[78]:=",ExpressionUUID->"9862d4c7-a796-43c5-990b-7ab0924a55ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Question 1 b) single-class M/G/1 PS queue with hyperexponential service times\
\
\>", "Section",
 CellChangeTimes->{{3.752149151932796*^9, 3.7521491764328423`*^9}, {
  3.752150167620509*^9, 
  3.7521501891755667`*^9}},ExpressionUUID->"fbce99f6-e3fd-4194-b545-\
60cabfc7afce"],

Cell["\<\
Assume now that the service times obey the hyperexponential distribution with \
two
phases representing long and short service times. More precisely, consider a \
hyperexponential
distribution with two phases \[Gamma] 1 and \[Gamma] 2 with weight parameter \
p with the following values

\[Gamma] 1 = 0.1 
\[Gamma] 2 = 10 
weight parameter p = 0.0909091

Repeat the same simulation as in a)-part and compare the results. Note that \
with these
parameters the service times have 17 times greater variance than with \
exponential distribution and 
recall the discussion on the lectures on impact of service times and scheduling
discipline. What do you observe? Are you able to explain your observations?\
\>", "Text",
 CellChangeTimes->{{3.752149225752441*^9, 3.75214925581264*^9}, {
  3.752149287345323*^9, 3.752149288876132*^9}, {3.7521493999444637`*^9, 
  3.752149404573662*^9}, {3.752149447012556*^9, 3.75214949409132*^9}, {
  3.752149540085472*^9, 3.7521496938709507`*^9}, {3.752150122425646*^9, 
  3.7521501592296343`*^9}},ExpressionUUID->"475e41a4-5816-4ec4-913f-\
e70c34b2907d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatorPShyperexp", "[", 
   RowBox[{"la_", ",", "mu_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simTime", ",", "res", ",", "state", ",", "meanqlen", ",", "prevEvTime", 
      ",", "nextArr", ",", "nextDep", ",", "joblist", ",", "delsum", ",", 
      "nofsamples", ",", "i", ",", " ", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Hyperexponential", " ", "distribution", " ", "parameter"}], 
       " ", "*)"}], "\[IndentingNewLine]", "gamma1", ",", " ", "gamma2", ",", 
      " ", "weightParameter"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gamma1", " ", "=", " ", "0.1"}], ";", " ", 
     RowBox[{"gamma2", " ", "=", " ", "10"}], ";", " ", 
     RowBox[{"weightParameter", "=", "0.0909091"}], ";", " ", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initialisatiom", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Draw", " ", "the", " ", "arrival", " ", "time", " ", "from", " ", 
       "exponential", " ", "distribution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nextArr", "=", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"set", " ", "X_", "0", " ", 
        RowBox[{"(", 
         RowBox[{"queue", " ", "length"}], ")"}]}], " ", "=", " ", "0"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"joblist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"delsum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", 
                RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                  RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"joblist", "=", 
              RowBox[{"{", "}"}]}]}], " ", 
            RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"process", " ", "arrival", " ", "event"}], ",", " ", 
             RowBox[{
             "insert", " ", "new", " ", "job", " ", "in", " ", "job", " ", 
              "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"joblist", "=", 
              RowBox[{"Append", "[", 
               RowBox[{"joblist", ",", 
                RowBox[{"{", 
                 RowBox[{"simTime", ",", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{"ExponentialDistribution", "[", "mu", "]"}], 
                   "]"}]}], "}"}]}], "]"}]}], ";"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", " ", "=", " ", 
            RowBox[{"Append", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{"{", 
               RowBox[{"simTime", ",", 
                RowBox[{"RandomVariate", "[", 
                 RowBox[{"HyperexponentialDistribution", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"weightParameter", ",", 
                    RowBox[{"1", "-", "weightParameter"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gamma1", ",", "gamma2"}], "}"}]}], "]"}], 
                 "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "sort", " ", "joblist", " ", "based", " ", "on", " ", "remaining",
              " ", "service", " ", "time"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"generate", " ", "new", " ", "arrival", " ", "event"}], 
             ",", " ", 
             RowBox[{"and", " ", "departure", " ", "event"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"nextArr", "=", 
            RowBox[{"simTime", "+", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextDep"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
             RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"joblist", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"joblist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"simTime", ">", "iniTrans"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"delsum", "+=", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nofsamples", "++"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"delete", " ", "departing", " ", "job"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"joblist", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"generate", " ", "new", " ", "departure", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "joblist", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"ouput", " ", "results"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanqlen", "/", 
        RowBox[{"(", 
         RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
       RowBox[{"delsum", "/", "nofsamples"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7521497377116623`*^9, 3.7521497486346893`*^9}, {
   3.752149813766675*^9, 3.752149828682575*^9}, {3.752149901927579*^9, 
   3.752150097998334*^9}, 3.752182280984005*^9},
 CellLabel->"In[79]:=",ExpressionUUID->"ebccdfd6-a9e4-45c9-aa0e-6b82a23604eb"],

Cell["\<\
For hyperexponential Service times, the confidence interval larger as \
compared to the queue simulation with 
exponential service times.
\
\>", "Text",
 CellChangeTimes->{{3.752150658222598*^9, 3.752150671593864*^9}, {
  3.75215071803426*^9, 
  3.752150773338797*^9}},ExpressionUUID->"6fbb043e-367d-4369-9f94-\
9eecdf00e339"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "lambdas", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"la", " ", "=", " ", 
     RowBox[{"lambdas", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPShyperexp", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "200000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``\>\"", 
       ",", "la", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7521502196880198`*^9, 3.752150220461583*^9}, 
   3.752150407101225*^9},
 CellLabel->"In[82]:=",ExpressionUUID->"08deb3db-b613-4fd2-a68f-a3fa5eb8a976"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.2`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.2519\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.2365981777839132`\\\", \
\\\",\\\", \\\"1.2672873184304874`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.2, 
   NumberForm[1.2519427481072003`, 5], {1.2365981777839132`, 
   1.2672873184304874`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.752150222932067*^9, 3.752150426797014*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"93d7e731-c69d-42f2-ba1a-79266ae6444c"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"2.009\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.9689795454332555`\\\", \
\\\",\\\", \\\"2.049078405752183`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.5, 
   NumberForm[2.0090289755927193`, 5], {1.9689795454332555`, 
   2.049078405752183}],
  Editable->False]], "Print",
 CellChangeTimes->{3.752150222932067*^9, 3.752150475213936*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"18fe6140-8055-4272-ba45-d04abaf90cc6"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.8`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"4.9208\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"4.782873479184488`\\\", \\\
\",\\\", \\\"5.058806151720686`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.8, 
   NumberForm[4.920839815452587, 5], {4.782873479184488, 5.058806151720686}],
  Editable->False]], "Print",
 CellChangeTimes->{3.752150222932067*^9, 3.7521505823583612`*^9},
 CellLabel->
  "During evaluation of \
In[82]:=",ExpressionUUID->"63ebfade-a34c-4ac4-a751-a294511cb3e4"]
}, Open  ]]
}, Open  ]],

Cell["Recall: For exponential Service times below (part 1a)", "Text",
 CellChangeTimes->{{3.752150631184493*^9, 3.752150651323452*^9}, {
  3.7521890051230593`*^9, 
  3.752189011374749*^9}},ExpressionUUID->"c5aa9b33-2cd1-4b94-aecd-\
c7d86fedeb78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "lambdas", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"la", " ", "=", " ", 
     RowBox[{"lambdas", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPS", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "200000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``\>\"", 
       ",", "la", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}]}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7521504130168962`*^9, 3.75215041524559*^9}},
 CellLabel->"In[83]:=",ExpressionUUID->"188c7fe9-f83f-4406-864a-a3dfae9062f0"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.2`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.2481\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.242188654768581`\\\", \\\
\",\\\", \\\"1.2540717714408978`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.2, 
   NumberForm[1.2481302131047394`, 5], {1.242188654768581, 
   1.2540717714408978`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521503813379602`*^9, 3.752150590056574*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"4a08ced9-48a9-48fc-ae1d-2061059071f1"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"2.0022\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.9880395035215421`\\\", \
\\\",\\\", \\\"2.0162843636732277`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.5, 
   NumberForm[2.002161933597385, 5], {1.9880395035215421`, 
   2.0162843636732277`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521503813379602`*^9, 3.752150613491343*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"5d9b92db-e299-44d3-ab6f-9b4f985562ed"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.8`\\\"}]\\), \
Mean: \\!\\(\\*RowBox[{\\\"\\\\\\\"4.9827\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"4.91410783226926`\\\", \
\\\",\\\", \\\"5.051211340912711`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "When \[Lambda] = ``, Mean: ``, 95% Confidence Interval = ``", 0.8, 
   NumberForm[4.9826595865909855`, 5], {4.91410783226926, 5.051211340912711}],
  
  Editable->False]], "Print",
 CellChangeTimes->{3.7521503813379602`*^9, 3.752150681765993*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"51107f98-8cd2-40f4-970c-0b4015419eff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Question 2a) Modified single-class M/G/1 PS simulator 
to simulate both FIFO discipline
and the SRPT discipline.\
\>", "Section",
 CellChangeTimes->{{3.752151205849225*^9, 3.7521512534550743`*^9}, {
  3.752183739993423*^9, 
  3.7521837424002132`*^9}},ExpressionUUID->"abcd7da8-05b9-4183-9b79-\
9c660c1dee1c"],

Cell["\<\
Your task is to simulate the M/G/1 queue with two different service time \
distributions and
compare the performance of the three disciplines (FIFO, PS, SRPT) to each \
other. 

Let us fix the mean service time as 1/\[Mu] = 1 and then the load \[Rho] = \
\[Lambda].

Assume first that the service times obey the exponential distribution with \
mean 1/\[Mu] = 1.
Simulate the system for \[Lambda] = {0.4, 0.6, 0.8} and estimate the mean \
delay together with its
95% confidence interval.\
\>", "Text",
 CellChangeTimes->{{3.7521512888272448`*^9, 3.752151300666614*^9}, {
  3.752159441612378*^9, 
  3.752159443336474*^9}},ExpressionUUID->"a8488733-1b1b-4cae-b425-\
a34669bcb102"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"simulatorFIFO", "[", 
    RowBox[{"la_", ",", "mu_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=",
    "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "simTime", ",", "res", ",", "queueLength", ",", "meanqlen", ",", 
       "prevEvTime", ",", "nextArr", ",", "nextDep", ",", "nofsamples", ",", 
       "i", ",", "serviceTime", ",", "totalService", ",", " ", "queue"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nextArr", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
      RowBox[{"queueLength", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"serviceTime", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"totalService", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{"Upon", " ", "arrival"}], " ", "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "save", " ", "time", " ", "of", " ", "previous", " ", "event"}],
               " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ",
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{"the", " ", "system", " ", "state"}], ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"i", ".", "e", ".", "the"}], " ", "queue", " ", 
                 "length", " ", "is", " ", "incremented", " ", "by", " ", 
                 RowBox[{"one", ":", 
                  RowBox[{"X", " ", "t"}]}]}], "=", 
                RowBox[{
                 RowBox[{"X", " ", "t"}], "+", "1"}]}]}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"queueLength", "+=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "if", " ", "the", " ", "system", " ", "is", " ", "empty", " ", 
               "upon", " ", "the", " ", "arrival"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "generate", " ", "the", " ", "departure", " ", "time", " ", 
                "of", " ", "the", " ", "customer"}], ",", 
               RowBox[{"t", "+", "S"}], ",", 
               RowBox[{
               "where", " ", "S", " ", "is", " ", "a", " ", "sample", " ", 
                "from", " ", "the", " ", "service", " ", "time", " ", 
                "distribution"}]}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"queueLength", "\[Equal]", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"serviceTime", "=", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{"ExponentialDistribution", "[", "mu", "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", " ", 
                  RowBox[{"departure", " ", "=", " ", 
                   RowBox[{"t", "+", "S"}]}], " ", "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"nextDep", "=", 
                  RowBox[{"simTime", " ", "+", " ", "serviceTime"}]}], ";"}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"serviceTime", "=", "0"}], ";"}], 
                "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "generate", " ", "the", " ", "arrival", " ", "instant", " ", 
                "of", " ", "the", " ", "next", " ", "customer"}], ",", 
               RowBox[{"t", "+", "I"}]}], " ", "*)"}], " ", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "where", " ", "I", " ", "is", " ", "the", " ", "interarrival", 
               " ", "time", " ", 
               RowBox[{"(", 
                RowBox[{"drawn", " ", "from", " ", "Exp", 
                 RowBox[{"(", "l", ")"}], " ", "distribution"}], ")"}]}], " ",
               "*)"}], "\[IndentingNewLine]", 
             RowBox[{"nextArr", "=", 
              RowBox[{"simTime", " ", "+", " ", 
               RowBox[{"RandomVariate", "[", 
                RowBox[{"ExponentialDistribution", "[", "la", "]"}], 
                "]"}]}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"simTime", ">", "iniTrans"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"totalService", "+=", "serviceTime"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"nofsamples", "+=", "1"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"meanqlen", "+=", 
                  RowBox[{"queueLength", "*", 
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], ";"}], 
                "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "Event", " ", "handling", " ", "upon", " ", "the", " ", 
             "departure", " ", "of", " ", "a", " ", "customer"}], " ", "*)"}],
            "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"If", " ", "nextDep"}], " ", "<", " ", "nextArr"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
             RowBox[{"(*", " ", 
              RowBox[{
              "save", " ", "time", " ", "of", " ", "previous", " ", "event"}],
               " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"simTime", "=", "nextDep"}], ";", 
             RowBox[{"(*", 
              RowBox[{
              "move", " ", "time", " ", "to", " ", "new", " ", "event"}], 
              "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"update", " ", "state"}], "*)"}], "\[IndentingNewLine]", 
             RowBox[{"queueLength", "-=", "1"}], ";", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
              "if", " ", "there", " ", "are", " ", "customers", " ", "left", 
               " ", "in", " ", "the", " ", "system"}], " ", "*)"}], " ", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{
               RowBox[{
               "generate", " ", "the", " ", "departure", " ", "time", " ", 
                "of", " ", "the", " ", "customer", " ", "to", " ", "be", " ", 
                "served", " ", "next"}], ",", 
               RowBox[{"t", "+", "S"}]}], " ", "*)"}], "\[IndentingNewLine]", 
             
             RowBox[{"(*", " ", 
              RowBox[{
              "where", " ", "S", " ", "is", " ", "a", " ", "sample", " ", 
               "from", " ", "the", " ", "service", " ", "time", " ", 
               "distribution"}], " ", "*)"}], "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"queueLength", " ", "!=", " ", "0"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"serviceTime", "=", 
                  RowBox[{"RandomVariate", "[", 
                   RowBox[{"ExponentialDistribution", "[", "mu", "]"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"nextDep", "=", 
                  RowBox[{"serviceTime", "+", "simTime"}]}], ";"}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"serviceTime", "=", "0"}], ";"}], 
                "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"simTime", ">", "iniTrans"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"totalService", "+=", "serviceTime"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"meanqlen", "+=", 
                  RowBox[{"queueLength", "*", 
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], ";"}], 
                "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
            "\[IndentingNewLine]", "}"}]}], "]"}], ";"}]}], 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"Print", "[", "queueLength", "]"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "Return", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"meanqlen", "/", 
         RowBox[{"(", 
          RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
        RowBox[{"totalService", "/", "nofsamples"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7519207612769823`*^9, 3.7519207983932467`*^9}, {
   3.751921012157215*^9, 3.7519210674100113`*^9}, {3.7519211513419943`*^9, 
   3.7519211599949536`*^9}, {3.751921213485489*^9, 3.7519212165642943`*^9}, {
   3.751921258341033*^9, 3.7519213011172123`*^9}, {3.751921364575677*^9, 
   3.7519213953724356`*^9}, {3.7519219434054217`*^9, 
   3.7519219807704706`*^9}, {3.7519220477602816`*^9, 
   3.7519220511701202`*^9}, {3.751922163582456*^9, 3.751922178083666*^9}, {
   3.751922821725794*^9, 3.7519232586279573`*^9}, {3.751923289037613*^9, 
   3.7519233155916157`*^9}, {3.7519235725785046`*^9, 3.751923615814231*^9}, {
   3.751923734215454*^9, 3.7519238195816293`*^9}, 3.751923862100012*^9, {
   3.7519239296117425`*^9, 3.751924130922185*^9}, {3.751924257086154*^9, 
   3.7519242707328663`*^9}, {3.751924332164747*^9, 3.7519243938967533`*^9}, {
   3.7519244263518376`*^9, 3.751924499880413*^9}, {3.751924565431999*^9, 
   3.751924574157089*^9}, {3.751924789372326*^9, 3.7519248187053165`*^9}, {
   3.751924850294603*^9, 3.7519249162528524`*^9}, {3.751928392491864*^9, 
   3.751928416302617*^9}, {3.751928507292138*^9, 3.7519285120314465`*^9}, {
   3.7519285457014093`*^9, 3.75192860552274*^9}, {3.751928953297513*^9, 
   3.751928980414818*^9}, {3.7519290417760916`*^9, 3.751929047986862*^9}, {
   3.751929186061597*^9, 3.7519292983212724`*^9}, {3.7519295267724404`*^9, 
   3.751929553484205*^9}, {3.7519296633239717`*^9, 3.7519296799150915`*^9}, {
   3.7519297535802183`*^9, 3.7519297866072087`*^9}, {3.7519298832767096`*^9, 
   3.751929950569918*^9}, {3.751929984447863*^9, 3.7519299854883084`*^9}, {
   3.751930043578212*^9, 3.7519300437236032`*^9}, 3.752160378426796*^9, {
   3.7521605285459003`*^9, 3.7521605642444773`*^9}, {3.752160598745078*^9, 
   3.7521606684305363`*^9}, {3.752160725793206*^9, 3.752160778349594*^9}, {
   3.752160844977913*^9, 3.752161235555749*^9}, {3.752161305311734*^9, 
   3.752161305505356*^9}, {3.752162876814098*^9, 3.752162952365816*^9}, {
   3.75216299816894*^9, 3.752163005814507*^9}, {3.7521631202435007`*^9, 
   3.752163124576302*^9}, {3.752163171316182*^9, 3.7521631922950974`*^9}, {
   3.752163730169983*^9, 3.752163730286477*^9}, {3.752164045894413*^9, 
   3.752164081486012*^9}, {3.752165256958906*^9, 3.752165260421359*^9}, {
   3.752165480476997*^9, 3.752165487942774*^9}, {3.752165716379265*^9, 
   3.7521657555911617`*^9}, {3.75216583110426*^9, 3.752165869775508*^9}, {
   3.752165984571641*^9, 3.752165984787627*^9}, {3.752166024566799*^9, 
   3.752166026889879*^9}, {3.7521660645725822`*^9, 3.7521660835234013`*^9}, {
   3.752166153083767*^9, 3.752166160476342*^9}, {3.752166202283431*^9, 
   3.752166215646585*^9}, {3.752166282770949*^9, 3.752166289771734*^9}, 
   3.752166436649796*^9, {3.7521665624239388`*^9, 3.752166574736396*^9}, {
   3.752167407522891*^9, 3.7521674083398314`*^9}, {3.752167491301395*^9, 
   3.7521675002558393`*^9}, {3.7521675348217487`*^9, 3.752167653125543*^9}, {
   3.752167796679047*^9, 3.7521678098212013`*^9}, {3.752168129671899*^9, 
   3.752168168436434*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"19316f4f-a90f-465a-beff-987339e013c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatorPS", "[", 
   RowBox[{"la_", ",", "mu_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simTime", ",", "res", ",", "state", ",", "meanqlen", ",", "prevEvTime", 
      ",", "nextArr", ",", "nextDep", ",", "joblist", ",", "delsum", ",", 
      "nofsamples", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initialisatiom", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Draw", " ", "the", " ", "arrival", " ", "time", " ", "from", " ", 
       "exponential", " ", "distribution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nextArr", "=", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"set", " ", "X_", "0", " ", 
        RowBox[{"(", 
         RowBox[{"queue", " ", "length"}], ")"}]}], " ", "=", " ", "0"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"joblist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"delsum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"For", "[", 
              RowBox[{
               RowBox[{"i", "=", "1"}], ",", 
               RowBox[{"i", "\[LessEqual]", 
                RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
               RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                RowBox[{
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                  RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ",",
              "\[IndentingNewLine]", 
             RowBox[{"joblist", "=", 
              RowBox[{"{", "}"}]}]}], " ", 
            RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"process", " ", "arrival", " ", "event"}], ",", " ", 
             RowBox[{
             "insert", " ", "new", " ", "job", " ", "in", " ", "job", " ", 
              "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{"{", 
               RowBox[{"simTime", ",", 
                RowBox[{"RandomVariate", "[", 
                 RowBox[{"ExponentialDistribution", "[", "mu", "]"}], "]"}]}],
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "sort", " ", "joblist", " ", "based", " ", "on", " ", "remaining",
              " ", "service", " ", "time"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"generate", " ", "new", " ", "arrival", " ", "event"}], 
             ",", " ", 
             RowBox[{"and", " ", "departure", " ", "event"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"nextArr", "=", 
            RowBox[{"simTime", "+", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextDep"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"For", "[", 
            RowBox[{
             RowBox[{"i", "=", "1"}], ",", 
             RowBox[{"i", "\[LessEqual]", 
              RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
             RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"joblist", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
              RowBox[{
               RowBox[{"joblist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"simTime", ">", "iniTrans"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"delsum", "+=", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nofsamples", "++"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"delete", " ", "departing", " ", "job"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"joblist", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"generate", " ", "new", " ", "departure", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "joblist", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"ouput", " ", "results"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanqlen", "/", 
        RowBox[{"(", 
         RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
       RowBox[{"delsum", "/", "nofsamples"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.752168631519685*^9, 3.752168632318046*^9}, {
  3.7521753689435167`*^9, 3.752175448743462*^9}, {3.752175482817758*^9, 
  3.752175573542712*^9}, {3.752175651469431*^9, 3.752175680525754*^9}, {
  3.752175716820314*^9, 3.752175730931172*^9}},
 CellLabel->"In[14]:=",ExpressionUUID->"4915a833-3832-4315-bd2f-4691bc3c6fa2"],

Cell["\<\
SRPT is not a big change from PS, 

Instead of serving all the remaining jobs, 

we only serve the job with the shortest remaining service time left\
\>", "Text",
 CellChangeTimes->{{3.752175757808386*^9, 
  3.752175790564334*^9}},ExpressionUUID->"995b93a9-18da-4e31-ae31-\
71125acb67d7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulatorSRPT", "[", 
   RowBox[{"la_", ",", "mu_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simTime", ",", "res", ",", "state", ",", "meanqlen", ",", "prevEvTime", 
      ",", "nextArr", ",", "nextDep", ",", "joblist", ",", "delsum", ",", 
      "nofsamples", ",", "i"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initialisatiom", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Draw", " ", "the", " ", "arrival", " ", "time", " ", "from", " ", 
       "exponential", " ", "distribution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nextArr", "=", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"set", " ", "X_", "0", " ", 
        RowBox[{"(", 
         RowBox[{"queue", " ", "length"}], ")"}]}], " ", "=", " ", "0"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"joblist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"delsum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "serve", " ", "the", " ", "job", " ", "with", " ", "the", " ", 
             "shortest", " ", "remaining", " ", "time", " ", "left"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"joblist", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{
               RowBox[{"joblist", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"joblist", "=", 
              RowBox[{"{", "}"}]}]}], " ", 
            RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"process", " ", "arrival", " ", "event"}], ",", " ", 
             RowBox[{
             "insert", " ", "new", " ", "job", " ", "in", " ", "job", " ", 
              "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{"{", 
               RowBox[{"simTime", ",", 
                RowBox[{"RandomVariate", "[", 
                 RowBox[{"ExponentialDistribution", "[", "mu", "]"}], "]"}]}],
                "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "sort", " ", "joblist", " ", "based", " ", "on", " ", "remaining",
              " ", "service", " ", "time"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"generate", " ", "new", " ", "arrival", " ", "event"}], 
             ",", " ", 
             RowBox[{"and", " ", "departure", " ", "event"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"nextArr", "=", 
            RowBox[{"simTime", "+", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextDep"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "serve", " ", "the", " ", "job", " ", "with", " ", "shortest", 
             " ", "remaining", " ", "time", " ", "left"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"joblist", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"joblist", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"(", 
              RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], " ", ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"simTime", ">", "iniTrans"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"delsum", "+=", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nofsamples", "++"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"delete", " ", "departing", " ", "job"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"joblist", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"generate", " ", "new", " ", "departure", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "joblist", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"ouput", " ", "results"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanqlen", "/", 
        RowBox[{"(", 
         RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
       RowBox[{"delsum", "/", "nofsamples"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.752176899889449*^9, 3.752176904844459*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"5b8f4a14-4e26-46e1-b545-b1787fbdd3a5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loads", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.4", ",", "0.6", ",", "0.8"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "loads", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"la", " ", "=", " ", 
     RowBox[{"loads", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"d", "=", " ", "\"\<FIFO\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorFIFO", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<When \[Lambda] = ``\>\"", ",", " ", "la"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``\>\"", 
       ",", "d", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"d", " ", "=", " ", "\"\<PS\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPS", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``\>\"", 
       ",", "d", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"d", " ", "=", " ", "\"\<SRPT\>\""}], ";", "\[IndentingNewLine]", 
    
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorSRPT", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``\>\"", 
       ",", "d", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.752176285741296*^9, 3.752176507478004*^9}, 
   3.752176947769993*^9, {3.752176987723933*^9, 3.752176991171032*^9}, {
   3.752184510269293*^9, 3.752184541406242*^9}, {3.752184589168583*^9, 
   3.7521846224075747`*^9}, {3.7521846569162827`*^9, 3.752184705719895*^9}, {
   3.752184744301819*^9, 3.7521848440945272`*^9}, {3.752185783976969*^9, 
   3.752185791771686*^9}},ExpressionUUID->"2af99460-b595-4ca7-a7f2-\
94022852c28d"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"When \[Lambda] = ``\"\>", "\[InvisibleSpace]", "0.4`"}],
  SequenceForm["When \[Lambda] = ``", 0.4],
  Editable->False]], "Print",
 CellChangeTimes->{3.752184850492098*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"ab875374-343a-4551-a33b-d8e51a533abd"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: FIFO, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\
\\\\\"2.5039\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2.485410672337173`\\\", \\\",\\\", \\\
\"2.522434337708163`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "FIFO", 
   NumberForm[2.503922505022668, 5], {2.485410672337173, 2.522434337708163}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521848504941587`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"e6d280aa-0e6c-4eb2-9644-3c56b68c5483"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: PS, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\
\\\"1.6698\\\\\\\"\\\"}]\\), 95% Confidence Interval = \\!\\(\\*RowBox[{\\\"{\
\\\", RowBox[{\\\"1.638795986336992`\\\", \\\",\\\", \
\\\"1.7008784316548158`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "PS", 
   NumberForm[1.669837208995904, 5], {1.638795986336992, 1.7008784316548158`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.752184854765973*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"07f24a47-d927-434b-8f85-b2ecf3ea7856"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: SRPT, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\
\\\\\"1.3894\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.3608825889590965`\\\", \\\",\\\", \
\\\"1.4179873378393684`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "SRPT", 
   NumberForm[1.3894349633992324`, 5], {1.3608825889590965`, 
   1.4179873378393684`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521848579987392`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"add81d06-8a6e-4095-8d0b-8b4018e515ce"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"When \[Lambda] = ``\"\>", "\[InvisibleSpace]", "0.6`"}],
  SequenceForm["When \[Lambda] = ``", 0.6],
  Editable->False]], "Print",
 CellChangeTimes->{3.752184862125854*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"bbae0af5-dad7-40eb-951c-f1563b0abe18"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: FIFO, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\
\\\\\"1.6762\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.6623732714984785`\\\", \\\",\\\", \
\\\"1.6900888922081605`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "FIFO", 
   NumberForm[1.6762310818533195`, 5], {1.6623732714984785`, 
   1.6900888922081605`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.752184862127338*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"5a021bec-60c6-4bf4-85a0-2fdac087d685"],

Cell[BoxData[
 InterpretationBox[
  "\"\<Discipline: PS, Mean Delay: \!\(\\\"\<2.4347\>\\\"\), 95% Confidence \
Interval = \!\({2.371073964641938`, 2.498287055382451`}\)\>\"",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "PS", 
   NumberForm[2.4346805100121944`, 5], {2.371073964641938, 2.498287055382451}],
  Editable->False]], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.752184869775217*^9, 
  3.752190504807289*^9},ExpressionUUID->"b97fa222-1636-4d0f-af48-\
2b44f4646af3"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: SRPT, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\
\\\\\"1.2858\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.2653931509494383`\\\", \\\",\\\", \
\\\"1.3061185690167876`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "SRPT", 
   NumberForm[1.285755859983113, 5], {1.2653931509494383`, 
   1.3061185690167876`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521848751237164`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"2a074d74-29fc-4256-b107-1a27052474ee"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"When \[Lambda] = ``\"\>", "\[InvisibleSpace]", "0.8`"}],
  SequenceForm["When \[Lambda] = ``", 0.8],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521848800892277`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"9fb4852b-1db8-4f4a-9659-85de06963192"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: FIFO, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\
\\\\\"1.2534\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.24877463249355`\\\", \\\",\\\", \
\\\"1.2580269335006609`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "FIFO", 
   NumberForm[1.2534007829971054`, 5], {1.24877463249355, 
   1.2580269335006609`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.752184880090641*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"191c529f-5941-4702-969d-ea4c84e62c2c"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: PS, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\
\\\"4.9521\\\\\\\"\\\"}]\\), 95% Confidence Interval = \\!\\(\\*RowBox[{\\\"{\
\\\", RowBox[{\\\"4.747015419510279`\\\", \\\",\\\", \\\"5.157158435929552`\\\
\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "PS", 
   NumberForm[4.9520869277199155`, 5], {4.747015419510279, 5.157158435929552}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521848961445*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"e30f6d4c-dd64-49e6-a9d4-b82aa8c999f1"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: SRPT, Mean Delay: \\!\\(\\*RowBox[{\\\"\\\
\\\\\"0.90992\\\\\\\"\\\"}]\\), 95% Confidence Interval = \\!\\(\\*RowBox[{\\\
\"{\\\", RowBox[{\\\"0.8824418927399293`\\\", \\\",\\\", \
\\\"0.9373947146354971`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", "SRPT", 
   NumberForm[0.9099183036877132, 5], {0.8824418927399293, 
   0.9373947146354971}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521849034785852`*^9},
 CellLabel->
  "During evaluation of \
In[46]:=",ExpressionUUID->"3a53c5a9-18a3-433c-bacc-734bd5acdeb1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Question 2b) PS, FIFO, SRPT  single-class M/G/1 PS simulator 
service times obey a hyperexponential distribution
with 2 phases\
\>", "Section",
 CellChangeTimes->{{3.75217743216818*^9, 3.752177514177822*^9}, {
  3.752183734048773*^9, 
  3.7521837344092007`*^9}},ExpressionUUID->"599ded39-9cdc-4cba-8054-\
0a04f72f2d17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"simulatorFIFOhyperexp", "[", 
     RowBox[{"la_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "simTime", ",", "res", ",", "queueLength", ",", "meanqlen", ",", 
        "prevEvTime", ",", "nextArr", ",", "nextDep", ",", "nofsamples", ",", 
        "i", ",", "serviceTime", ",", "totalService", ",", " ", "queue", ",", 
        " ", "\[IndentingNewLine]", "gamma1", ",", " ", "gamma2", ",", " ", 
        "weightParameter"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"gamma1", " ", "=", " ", "0.1"}], ";", " ", 
       RowBox[{"gamma2", " ", "=", " ", "10"}], ";", " ", 
       RowBox[{"weightParameter", "=", "0.0909091"}], ";", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"nextArr", "=", 
        RowBox[{"RandomVariate", "[", 
         RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
       RowBox[{"queueLength", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"serviceTime", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"totalService", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{"Upon", " ", "arrival"}], " ", "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "save", " ", "time", " ", "of", " ", "previous", " ", 
                "event"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "move", " ", "time", " ", "to", " ", "new", " ", "event"}], 
               " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{"the", " ", "system", " ", "state"}], ",", 
                RowBox[{
                 RowBox[{
                  RowBox[{"i", ".", "e", ".", "the"}], " ", "queue", " ", 
                  "length", " ", "is", " ", "incremented", " ", "by", " ", 
                  RowBox[{"one", ":", 
                   RowBox[{"X", " ", "t"}]}]}], "=", 
                 RowBox[{
                  RowBox[{"X", " ", "t"}], "+", "1"}]}]}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"queueLength", "+=", "1"}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "the", " ", "system", " ", "is", " ", "empty", " ", 
                "upon", " ", "the", " ", "arrival"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                "generate", " ", "the", " ", "departure", " ", "time", " ", 
                 "of", " ", "the", " ", "customer"}], ",", 
                RowBox[{"t", "+", "S"}], ",", 
                RowBox[{
                "where", " ", "S", " ", "is", " ", "a", " ", "sample", " ", 
                 "from", " ", "the", " ", "service", " ", "time", " ", 
                 "distribution"}]}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"queueLength", "\[Equal]", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"serviceTime", "=", " ", 
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{"HyperexponentialDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"weightParameter", ",", 
                    RowBox[{"1", "-", "weightParameter"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gamma1", ",", "gamma2"}], "}"}]}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"(*", " ", 
                   RowBox[{"departure", " ", "=", " ", 
                    RowBox[{"t", "+", "S"}]}], " ", "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"nextDep", "=", 
                   RowBox[{"simTime", " ", "+", " ", "serviceTime"}]}], ";"}],
                  "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"serviceTime", "=", "0"}], ";"}], 
                 "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                "generate", " ", "the", " ", "arrival", " ", "instant", " ", 
                 "of", " ", "the", " ", "next", " ", "customer"}], ",", 
                RowBox[{"t", "+", "I"}]}], " ", "*)"}], " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "where", " ", "I", " ", "is", " ", "the", " ", "interarrival", 
                " ", "time", " ", 
                RowBox[{"(", 
                 RowBox[{"drawn", " ", "from", " ", "Exp", 
                  RowBox[{"(", "l", ")"}], " ", "distribution"}], ")"}]}], 
               " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"nextArr", "=", 
               RowBox[{"simTime", " ", "+", " ", 
                RowBox[{"RandomVariate", "[", 
                 RowBox[{"ExponentialDistribution", "[", "la", "]"}], 
                 "]"}]}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"simTime", ">", "iniTrans"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"totalService", "+=", "serviceTime"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"nofsamples", "+=", "1"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"meanqlen", "+=", 
                   RowBox[{"queueLength", "*", 
                    RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], ";"}], 
                 "}"}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "Event", " ", "handling", " ", "upon", " ", "the", " ", 
              "departure", " ", "of", " ", "a", " ", "customer"}], " ", 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"If", " ", "nextDep"}], " ", "<", " ", "nextArr"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
              RowBox[{"(*", " ", 
               RowBox[{
               "save", " ", "time", " ", "of", " ", "previous", " ", 
                "event"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"simTime", "=", "nextDep"}], ";", 
              RowBox[{"(*", 
               RowBox[{
               "move", " ", "time", " ", "to", " ", "new", " ", "event"}], 
               "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{"update", " ", "state"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"queueLength", "-=", "1"}], ";", "\[IndentingNewLine]", 
              
              RowBox[{"(*", " ", 
               RowBox[{
               "if", " ", "there", " ", "are", " ", "customers", " ", "left", 
                " ", "in", " ", "the", " ", "system"}], " ", "*)"}], " ", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
                RowBox[{
                "generate", " ", "the", " ", "departure", " ", "time", " ", 
                 "of", " ", "the", " ", "customer", " ", "to", " ", "be", " ",
                  "served", " ", "next"}], ",", 
                RowBox[{"t", "+", "S"}]}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{
               "where", " ", "S", " ", "is", " ", "a", " ", "sample", " ", 
                "from", " ", "the", " ", "service", " ", "time", " ", 
                "distribution"}], " ", "*)"}], "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"queueLength", " ", "!=", " ", "0"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"serviceTime", "=", " ", 
                   RowBox[{"RandomVariate", "[", 
                    RowBox[{"HyperexponentialDistribution", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"weightParameter", ",", 
                    RowBox[{"1", "-", "weightParameter"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gamma1", ",", "gamma2"}], "}"}]}], "]"}], 
                    "]"}]}], ";", "\[IndentingNewLine]", 
                  RowBox[{"nextDep", "=", 
                   RowBox[{"serviceTime", "+", "simTime"}]}], ";"}], 
                 "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"serviceTime", "=", "0"}], ";"}], 
                 "\[IndentingNewLine]", "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"simTime", ">", "iniTrans"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"totalService", "+=", "serviceTime"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"meanqlen", "+=", 
                   RowBox[{"queueLength", "*", 
                    RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], ";"}], 
                 "\[IndentingNewLine]", "}"}]}], "]"}], ";"}], 
             "\[IndentingNewLine]", "}"}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{"Print", "[", "queueLength", "]"}], "*)"}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", "Return", " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"meanqlen", "/", 
          RowBox[{"(", 
           RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
         RowBox[{"totalService", "/", "nofsamples"}]}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"simulatorPShyperexp", "[", 
    RowBox[{"la_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "simTime", ",", "res", ",", "state", ",", "meanqlen", ",", "prevEvTime",
        ",", "nextArr", ",", "nextDep", ",", "joblist", ",", "delsum", ",", 
       "nofsamples", ",", "i", ",", "\[IndentingNewLine]", "gamma1", ",", 
       "gamma2", ",", " ", "weightParameter"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gamma1", " ", "=", " ", "0.1"}], ";", " ", 
      RowBox[{"gamma2", " ", "=", " ", "10"}], ";", " ", 
      RowBox[{"weightParameter", "=", "0.0909091"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"Initialisatiom", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Draw", " ", "the", " ", "arrival", " ", "time", " ", "from", " ", 
        "exponential", " ", "distribution"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"nextArr", "=", 
       RowBox[{"RandomVariate", "[", 
        RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", 
      " ", "\[IndentingNewLine]", 
      RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"set", " ", "X_", "0", " ", 
         RowBox[{"(", 
          RowBox[{"queue", " ", "length"}], ")"}]}], " ", "=", " ", "0"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"joblist", "=", 
       RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"delsum", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"meanqlen", "+=", 
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
                "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"joblist", "=", 
               RowBox[{"{", "}"}]}]}], " ", 
             RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"process", " ", "arrival", " ", "event"}], ",", " ", 
              RowBox[{
              "insert", " ", "new", " ", "job", " ", "in", " ", "job", " ", 
               "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"joblist", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"joblist", ",", 
               RowBox[{"{", 
                RowBox[{"simTime", ",", 
                 RowBox[{"RandomVariate", "[", 
                  RowBox[{"HyperexponentialDistribution", "[", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"weightParameter", ",", 
                    RowBox[{"1", "-", "weightParameter"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"gamma1", ",", "gamma2"}], "}"}]}], "]"}], 
                  "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
             "sort", " ", "joblist", " ", "based", " ", "on", " ", 
              "remaining", " ", "service", " ", "time"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"joblist", "=", 
             RowBox[{"Sort", "[", 
              RowBox[{"joblist", ",", 
               RowBox[{
                RowBox[{
                 RowBox[{"#1", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "<", 
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"generate", " ", "new", " ", "arrival", " ", "event"}], 
              ",", " ", 
              RowBox[{"and", " ", "departure", " ", "event"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"nextArr", "=", 
             RowBox[{"simTime", "+", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}]}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"nextDep", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"Length", "[", "joblist", "]"}], "*", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
               "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
             " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"simTime", "=", "nextDep"}], ";", " ", 
            RowBox[{"(*", " ", 
             RowBox[{
             "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
             "*)"}], "\[IndentingNewLine]", 
            RowBox[{"meanqlen", "+=", 
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
                "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"serve", " ", "the", " ", "existing", " ", "jobs"}], " ",
              "*)"}], "\[IndentingNewLine]", 
            RowBox[{"For", "[", 
             RowBox[{
              RowBox[{"i", "=", "1"}], ",", 
              RowBox[{"i", "\[LessEqual]", 
               RowBox[{"Length", "[", "joblist", "]"}]}], ",", 
              RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"joblist", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
               RowBox[{
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                 RowBox[{"Length", "[", "joblist", "]"}]}]}]}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"simTime", ">", "iniTrans"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", " ", 
               RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"delsum", "+=", 
                RowBox[{"(", 
                 RowBox[{"simTime", "-", 
                  RowBox[{"joblist", "[", 
                   RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"nofsamples", "++"}], ";"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"delete", " ", "departing", " ", "job"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"joblist", "=", 
             RowBox[{"Delete", "[", 
              RowBox[{"joblist", ",", "1"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"generate", " ", "new", " ", "departure", " ", "event"}],
              " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"nextDep", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"Length", "[", "joblist", "]"}], "*", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
               "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"Print", "[", "joblist", "]"}], ";"}], "*)"}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"ouput", " ", "results"}], " ", "*)"}], "\[IndentingNewLine]", 
      
      RowBox[{"{", 
       RowBox[{
        RowBox[{"meanqlen", "/", 
         RowBox[{"(", 
          RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
        RowBox[{"delsum", "/", "nofsamples"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"simulatorSRPThyperexp", "[", 
   RowBox[{"la_", ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simTime", ",", "res", ",", "state", ",", "meanqlen", ",", "prevEvTime", 
      ",", "nextArr", ",", "nextDep", ",", "joblist", ",", "delsum", ",", 
      "nofsamples", ",", "i", ",", "\[IndentingNewLine]", "gamma1", ",", " ", 
      "gamma2", ",", " ", "weightParameter"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"gamma1", " ", "=", " ", "0.1"}], ";", " ", 
     RowBox[{"gamma2", " ", "=", " ", "10"}], ";", " ", 
     RowBox[{"weightParameter", "=", "0.0909091"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"Initialisatiom", ":"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "Draw", " ", "the", " ", "arrival", " ", "time", " ", "from", " ", 
       "exponential", " ", "distribution"}], " ", "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"nextArr", "=", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}], ";", " ",
      "\[IndentingNewLine]", 
     RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"set", " ", "X_", "0", " ", 
        RowBox[{"(", 
         RowBox[{"queue", " ", "length"}], ")"}]}], " ", "=", " ", "0"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"joblist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"delsum", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nofsamples", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextArr"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "serve", " ", "the", " ", "job", " ", "with", " ", "the", " ", 
             "shortest", " ", "remaining", " ", "time", " ", "left"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"joblist", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
              RowBox[{
               RowBox[{"joblist", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"joblist", "=", 
              RowBox[{"{", "}"}]}]}], " ", 
            RowBox[{"(*", " ", "else", " ", "*)"}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"process", " ", "arrival", " ", "event"}], ",", " ", 
             RowBox[{
             "insert", " ", "new", " ", "job", " ", "in", " ", "job", " ", 
              "list"}]}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Append", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{"{", 
               RowBox[{"simTime", ",", 
                RowBox[{"RandomVariate", "[", 
                 RowBox[{"HyperexponentialDistribution", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"weightParameter", ",", 
                    RowBox[{"1", "-", "weightParameter"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"gamma1", ",", "gamma2"}], "}"}]}], "]"}], 
                 "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "sort", " ", "joblist", " ", "based", " ", "on", " ", "remaining",
              " ", "service", " ", "time"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Sort", "[", 
             RowBox[{"joblist", ",", 
              RowBox[{
               RowBox[{
                RowBox[{"#1", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "<", 
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
             RowBox[{"generate", " ", "new", " ", "arrival", " ", "event"}], 
             ",", " ", 
             RowBox[{"and", " ", "departure", " ", "event"}]}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"nextArr", "=", 
            RowBox[{"simTime", "+", 
             RowBox[{"RandomVariate", "[", 
              RowBox[{"ExponentialDistribution", "[", "la", "]"}], "]"}]}]}], 
           ";", "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}], ",",
          "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"prevEvTime", "=", "simTime"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "save", " ", "time", " ", "of", " ", "previous", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"simTime", "=", "nextDep"}], ";", " ", 
           RowBox[{"(*", " ", 
            RowBox[{
            "move", " ", "time", " ", "to", " ", "new", " ", "event"}], " ", 
            "*)"}], "\[IndentingNewLine]", 
           RowBox[{"meanqlen", "+=", 
            RowBox[{
             RowBox[{"Length", "[", "joblist", "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Min", "[", 
                RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
               "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{
            "serve", " ", "the", " ", "job", " ", "with", " ", "shortest", 
             " ", "remaining", " ", "time", " ", "left"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"joblist", "[", 
             RowBox[{"[", 
              RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "=", " ", 
            RowBox[{
             RowBox[{"joblist", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
             RowBox[{"(", 
              RowBox[{"simTime", "-", "prevEvTime"}], ")"}]}]}], " ", ";", 
           "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"simTime", ">", "iniTrans"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", " ", 
              RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"delsum", "+=", 
               RowBox[{"(", 
                RowBox[{"simTime", "-", 
                 RowBox[{"joblist", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"nofsamples", "++"}], ";"}]}], "\[IndentingNewLine]", 
            "]"}], ";", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"delete", " ", "departing", " ", "job"}], " ", "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"joblist", "=", 
            RowBox[{"Delete", "[", 
             RowBox[{"joblist", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"generate", " ", "new", " ", "departure", " ", "event"}], 
            " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"nextDep", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "joblist", "]"}], ">", "0"}], ",", 
              RowBox[{"simTime", "+", 
               RowBox[{
                RowBox[{"Length", "[", "joblist", "]"}], "*", 
                RowBox[{"joblist", "[", 
                 RowBox[{"[", 
                  RowBox[{"1", ",", "2"}], "]"}], "]"}]}]}], ",", 
              "Infinity"}], "]"}]}], ";"}], "\[IndentingNewLine]", "}"}]}], 
        "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Print", "[", "joblist", "]"}], ";"}], "*)"}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"ouput", " ", "results"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanqlen", "/", 
        RowBox[{"(", 
         RowBox[{"la", "*", "simuLen"}], ")"}]}], ",", 
       RowBox[{"delsum", "/", "nofsamples"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7521775362245407`*^9, {3.752182233953279*^9, 3.752182236631523*^9}, {
   3.752182304210046*^9, 3.752182382792108*^9}, {3.7521824146260843`*^9, 
   3.7521824476684113`*^9}, {3.752182660049335*^9, 3.752182665444319*^9}, {
   3.75218270541063*^9, 3.75218274495538*^9}, {3.752182777692922*^9, 
   3.752182878940989*^9}, {3.752182944375359*^9, 3.752182953203171*^9}, {
   3.7521831081818447`*^9, 3.752183144186173*^9}, {3.752183213317512*^9, 
   3.752183213425716*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"bbab74b1-26a8-40ce-a07d-345801f6f2a0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loads", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0.4", ",", "0.6", ",", "0.8"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "loads", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"la", " ", "=", " ", 
     RowBox[{"loads", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"d", "=", " ", "\"\<FIFO (Hyperexponential Service times)\>\""}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorFIFOhyperexp", "[", 
        RowBox[{"la", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"\"\<When \[Lambda] = ``\>\"", ",", " ", "la"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``\>\"", 
       ",", "d", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
    "d", " ", "=", " ", "\"\<PS (Hyperexponential Service times)\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPShyperexp", "[", 
        RowBox[{"la", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``\>\"", 
       ",", "d", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
    "d", " ", "=", " ", "\"\<SRPT (Hyperexponential Service times)\>\""}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorSRPThyperexp", "[", 
        RowBox[{"la", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"MeanCI", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Print", "[", 
     RowBox[{"StringForm", "[", 
      RowBox[{
      "\"\<Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``\>\"", 
       ",", "d", ",", 
       RowBox[{"NumberForm", "[", 
        RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
     "]"}], ";"}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.7521829926402473`*^9, 3.752183027704627*^9}, {
  3.752184868228706*^9, 3.752184975019485*^9}, {3.7521858004826508`*^9, 
  3.752185808035322*^9}},ExpressionUUID->"e2b4194b-8929-4e83-aaf5-\
87e7b180cdd9"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"When \[Lambda] = ``\"\>", "\[InvisibleSpace]", "0.4`"}],
  SequenceForm["When \[Lambda] = ``", 0.4],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752184989127036*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"2c7dc8bb-93ab-499e-a172-57e2fd98a4b9"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: FIFO (Hyperexponential Service times), \
Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"2.4924\\\\\\\"\\\"}]\\), 95% \
Confidence Interval = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"2.4744163389529494`\\\", \\\",\\\", \\\"2.510395996283275`\\\"}], \
\\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "FIFO (Hyperexponential Service times)", 
   NumberForm[2.492406167618112, 5], {2.4744163389529494`, 2.510395996283275}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.7521849891329813`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"3bf570ff-ff3a-4dd6-af4f-71ea498b9b07"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: PS (Hyperexponential Service times), Mean \
Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.6311\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"1.5343723053126068`\\\", \
\\\",\\\", \\\"1.7279240035479504`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "PS (Hyperexponential Service times)", 
   NumberForm[1.6311481544302786`, 5], {1.5343723053126068`, 
   1.7279240035479504`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.7521849973788223`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"d98c761a-0aba-426e-8fef-ba79de136195"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: SRPT (Hyperexponential Service times), \
Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.1976\\\\\\\"\\\"}]\\), 95% \
Confidence Interval = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1.1405679531084811`\\\", \\\",\\\", \
\\\"1.2547085238019589`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "SRPT (Hyperexponential Service times)", 
   NumberForm[1.19763823845522, 5], {1.1405679531084811`, 
   1.2547085238019589`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752185004985632*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"0b681112-da07-4446-a1ec-8d208905c89b"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"When \[Lambda] = ``\"\>", "\[InvisibleSpace]", "0.6`"}],
  SequenceForm["When \[Lambda] = ``", 0.6],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.7521850192380667`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"d4772f19-00b3-4acf-9598-d817357c9f3a"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: FIFO (Hyperexponential Service times), \
Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.6733\\\\\\\"\\\"}]\\), 95% \
Confidence Interval = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1.663603943031505`\\\", \\\",\\\", \\\"1.6829834433031117`\\\"}], \
\\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "FIFO (Hyperexponential Service times)", 
   NumberForm[1.6732936931673084`, 5], {1.663603943031505, 
   1.6829834433031117`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.7521850192399282`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"df81e190-cf28-4cac-89ab-f628ba7f8a4b"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: PS (Hyperexponential Service times), Mean \
Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"2.5578\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"2.4099437351632593`\\\", \
\\\",\\\", \\\"2.705693945644371`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "PS (Hyperexponential Service times)", 
   NumberForm[2.557818840403815, 5], {2.4099437351632593`, 2.705693945644371}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752185033387698*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"59edd711-411f-4d99-8d59-f61350dd7ed5"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: SRPT (Hyperexponential Service times), \
Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.2599\\\\\\\"\\\"}]\\), 95% \
Confidence Interval = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1.1823922963179485`\\\", \\\",\\\", \
\\\"1.3374508957479576`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "SRPT (Hyperexponential Service times)", 
   NumberForm[1.259921596032953, 5], {1.1823922963179485`, 
   1.3374508957479576`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752185044917096*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"7ca0ef72-7e08-4d4b-8da5-1d92dd817409"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"When \[Lambda] = ``\"\>", "\[InvisibleSpace]", "0.8`"}],
  SequenceForm["When \[Lambda] = ``", 0.8],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752185059399235*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"aaff8a28-348d-4cd6-8923-b0917ffe4e6c"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: FIFO (Hyperexponential Service times), \
Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.2599\\\\\\\"\\\"}]\\), 95% \
Confidence Interval = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1.248860646138179`\\\", \\\",\\\", \\\"1.2710025687466389`\\\"}], \
\\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "FIFO (Hyperexponential Service times)", 
   NumberForm[1.259931607442409, 5], {1.248860646138179, 1.2710025687466389`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752185059400683*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"6fe2884d-db92-425a-8023-dd574a4c8923"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: PS (Hyperexponential Service times), Mean \
Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"4.4229\\\\\\\"\\\"}]\\), 95% Confidence \
Interval = \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"3.8145823911275047`\\\", \
\\\",\\\", \\\"5.031247267021892`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "PS (Hyperexponential Service times)", 
   NumberForm[4.422914829074698, 5], {3.8145823911275047`, 5.031247267021892}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.752185083061768*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"d73de247-d0e9-4c04-ac84-011738c3cc1f"],

Cell[BoxData[
 InterpretationBox["\<\"Discipline: SRPT (Hyperexponential Service times), \
Mean Delay: \\!\\(\\*RowBox[{\\\"\\\\\\\"1.3097\\\\\\\"\\\"}]\\), 95% \
Confidence Interval = \\!\\(\\*RowBox[{\\\"{\\\", \
RowBox[{\\\"1.2471277305661237`\\\", \\\",\\\", \
\\\"1.3722150351572642`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm[
  "Discipline: ``, Mean Delay: ``, 95% Confidence Interval = ``", 
   "SRPT (Hyperexponential Service times)", 
   NumberForm[1.309671382861694, 5], {1.2471277305661237`, 
   1.3722150351572642`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.7521830472848663`*^9, 3.752183174745779*^9, 
  3.752183239313936*^9, 3.7521850984976473`*^9},
 CellLabel->
  "During evaluation of \
In[50]:=",ExpressionUUID->"0fde786c-d38c-4867-b6ac-7259122640a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Question 2c) Compare the results. What do you observe?", "Section",
 CellChangeTimes->{{3.752151205849225*^9, 3.7521512534550743`*^9}, {
  3.752169183802745*^9, 3.7521692157583017`*^9}, {3.752177436310281*^9, 
  3.752177459355289*^9}, {3.752183704267557*^9, 
  3.752183717156619*^9}},ExpressionUUID->"90de587d-fe58-46fd-9011-\
7db821c66911"],

Cell["\<\
c)  To gain more insight you may also use the results of PS as a reference \
and evaluate the ratio of the delays for FIFO and SRPT relative
to PS. If you want to visualize the results in a plot, you can of course \
simulate more load
values. Note that with these parameters the service times have almost 17 \
times greater
variance than with the exponential distribution and recall the discussion on \
the lectures on
impact of service times and scheduling discipline.\
\>", "Text",
 CellChangeTimes->{{3.7521836931821404`*^9, 3.752183727034737*^9}, {
  3.75219160916716*^9, 
  3.752191611616988*^9}},ExpressionUUID->"91aae3e9-5ec7-43a9-92bc-\
a186cee10775"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"data", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"loads", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "0.1", ",", "0.2", ",", "0.3", ",", "0.4", ",", "0.5", ",", "0.6", ",", 
     "0.7", ",", "0.8", ",", "0.9", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", "=", "1"}], ",", 
   RowBox[{"i", "<=", 
    RowBox[{"Length", "[", "loads", "]"}]}], ",", 
   RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"la", " ", "=", " ", 
     RowBox[{"loads", "[", 
      RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorFIFO", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "1", "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"la", ",", " ", "mean"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPS", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "2", "]"}], "]"}], "  ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "2", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"la", ",", " ", "mean"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorSRPT", "[", 
        RowBox[{"la", ",", "1", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "3", "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "3", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"la", ",", " ", "mean"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorFIFOhyperexp", "[", 
        RowBox[{"la", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", " ", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "4", "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "4", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"la", ",", " ", "mean"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorPShyperexp", "[", 
        RowBox[{"la", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "5", "]"}], "]"}], "  ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "5", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"la", ",", " ", "mean"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"res", " ", "=", " ", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"simulatorSRPThyperexp", "[", 
        RowBox[{"la", ",", "2000", ",", "20000"}], "]"}], ",", 
       RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"mean", " ", "=", " ", 
     RowBox[{"Mean", "[", 
      RowBox[{"res", "[", 
       RowBox[{"[", 
        RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"data", "[", 
      RowBox[{"[", "6", "]"}], "]"}], " ", "=", " ", 
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "6", "]"}], "]"}], " ", ",", " ", 
       RowBox[{"{", 
        RowBox[{"la", ",", " ", "mean"}], "}"}]}], "]"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.752185479170306*^9, 3.752185506972227*^9}, {
  3.752185639774955*^9, 3.752185719945888*^9}, {3.752185838159452*^9, 
  3.75218593997262*^9}, {3.7521859784732113`*^9, 3.7521860424099627`*^9}, {
  3.7521868459733143`*^9, 3.752186851386135*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"825330d7-f206-4e6e-a460-e32117ad85d4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<FIFO\>\""}], "]"}], 
     ",", " ", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "4", "]"}], "]"}], ",", " ", 
       "\"\<FIFO (Hyperexp SvcTime)\>\""}], "]"}]}], "}"}], " ", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<lambda\>\"", ",", " ", "\"\<Mean Delay\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\"\<PS\>\""}], "]"}], ",", 
     " ", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "5", "]"}], "]"}], ",", " ", 
       "\"\<PS (Hyperexp SvcTime)\>\""}], "]"}]}], "}"}], " ", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<lambda\>\"", ",", " ", "\"\<Mean Delay\>\""}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", "\"\<SRPT\>\""}], "]"}], 
     ",", " ", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       "\"\<SRPT (Hyperexp SvcTime)\>\""}], "]"}]}], "}"}], " ", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<lambda\>\"", ",", " ", "\"\<Mean Delay\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.752185141668848*^9, 3.75218518214799*^9}, {
  3.752185213905036*^9, 3.7521853672062817`*^9}, {3.7521860828797398`*^9, 
  3.752186116919668*^9}, {3.752191697063526*^9, 3.752191706495014*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"309735b2-0d14-4101-a81b-b8f58b0f2849"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 9.96588764030771}, {0.2, 5.025664255728578}, {0.3, 
          3.3547799586587637`}, {0.4, 2.5011430485526303`}, {0.5, 
          1.9933216962163538`}, {0.6, 1.6726061095338989`}, {0.7, 
          1.4334548331789194`}, {0.8, 1.2473612774109213`}, {0.9, 
          1.1137644294127635`}, {1., 1.00381483334323}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$13788, {1}}]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 9.965368780450394}, {0.2, 4.964956612862468}, {0.3, 
          3.3383013077145}, {0.4, 2.4927548089914944`}, {0.5, 
          1.9936153735512137`}, {0.6, 1.6685269061543277`}, {0.7, 
          1.4261358464314875`}, {0.8, 1.2482311000246096`}, {0.9, 
          1.1114451814007626`}, {1., 1.0221519886390842`}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$13788, {
          2}}]& ]}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 9.96588764030771}}, PlotRangeClipping -> True,
      ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"lambda\"", TraditionalForm], 
       FormBox["\"Mean Delay\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 9.96588764030771}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"FIFO\"", "\"FIFO (Hyperexp SvcTime)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.752185248170185*^9, 3.752185254764556*^9}, 
   3.752185288188888*^9, {3.752185329591002*^9, 3.75218536769538*^9}, 
   3.752186489211903*^9, 3.752187674817659*^9, 3.752191707090929*^9},
 CellLabel->
  "Out[136]=",ExpressionUUID->"7a0e41b3-a6d6-4d9e-975f-db39ff9ead10"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.123896842680507}, {0.2, 1.2480559120930033`}, {0.3, 
          1.4229465074818277`}, {0.4, 1.7015903873228886`}, {0.5, 
          2.0054859002931162`}, {0.6, 2.483517003132678}, {0.7, 
          3.2647869560608043`}, {0.8, 4.896291614540023}, {0.9, 
          10.39452882348856}, {0.9134915814446981, 23.492274088003786`}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$13860, {1}}]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.2034514809726953`}, {0.2, 1.2104739057931944`}, {
          0.3, 1.395247530560717}, {0.4, 1.652383824805917}, {0.5, 
          1.9357945879749785`}, {0.6, 2.8097062793381364`}, {0.7, 
          3.396944371154807}, {0.8, 5.066106907769209}, {0.9, 
          10.145743182457316`}, {0.9516740953137481, 23.492274088003786`}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$13860, {
          2}}]& ]}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 23.492274088003786`}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"lambda\"", TraditionalForm], 
       FormBox["\"Mean Delay\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0, 23.492274088003786`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"PS\"", "\"PS (Hyperexp SvcTime)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.752185248170185*^9, 3.752185254764556*^9}, 
   3.752185288188888*^9, {3.752185329591002*^9, 3.75218536769538*^9}, 
   3.752186489211903*^9, 3.752187674817659*^9, 3.752191707190961*^9},
 CellLabel->
  "Out[137]=",ExpressionUUID->"6d1b7c6d-0c91-4081-8ec6-7c6bf9d00131"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.1272157754578775`}, {0.2, 1.2509145081864843`}, {
          0.3, 1.3446901270232883`}, {0.4, 1.4176164249610461`}, {0.5, 
          1.3752344073572746`}, {0.6, 1.2778409334279845`}, {0.7, 
          1.1042773575820735`}, {0.8, 0.9003879134371717}, {
          0.8621741761664073, 0.7468800267320681}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$13932, {1}}]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.096405273054176}, {0.2, 1.0905264161846315`}, {0.3, 
          1.1593925854497553`}, {0.4, 1.207175948195043}, {0.5, 
          1.2449274422343681`}, {0.6, 1.3115996672548509`}, {0.7, 
          1.3196240091530071`}, {0.8, 1.29144571072943}, {0.9, 
          1.2227640357528657`}, {1., 1.1321386232574002`}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$13932, {
          2}}]& ]}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0.7133432068206191}, 
     PlotRange -> {{0, 1.}, {0.7468800267320681, 1.4176164249610461`}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"lambda\"", TraditionalForm], 
       FormBox["\"Mean Delay\"", TraditionalForm]}, 
     AxesOrigin -> {0, 0.7133432068206191}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1.}, {0.7468800267320681, 1.4176164249610461`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"SRPT\"", "\"SRPT (Hyperexp SvcTime)\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.752185248170185*^9, 3.752185254764556*^9}, 
   3.752185288188888*^9, {3.752185329591002*^9, 3.75218536769538*^9}, 
   3.752186489211903*^9, 3.752187674817659*^9, 3.7521917072739973`*^9},
 CellLabel->
  "Out[138]=",ExpressionUUID->"7d3dfd9c-bf4f-4492-b36f-499f4237db3a"]
}, Open  ]],

Cell["\<\
Here we see that SRPT is most affected by the different distribution of the \
service time, while PS and FIFO remain roughly the same.\
\>", "Text",
 CellChangeTimes->{{3.752187732772784*^9, 
  3.752187807529456*^9}},ExpressionUUID->"810d0e23-b678-4756-923b-\
26bc1af04295"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "1", "]"}], "]"}], ",", " ", "\"\<FIFO\>\""}], "]"}], 
     ",", " ", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "2", "]"}], "]"}], ",", " ", "\"\<PS\>\""}], "]"}], ",", 
     
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "3", "]"}], "]"}], ",", " ", "\"\<SRPT\>\""}], "]"}], 
     ",", " ", 
     RowBox[{"Legended", "[", 
      RowBox[{
       RowBox[{"data", "[", 
        RowBox[{"[", "6", "]"}], "]"}], ",", " ", 
       "\"\<SRPT (Hyperexp SvcTime)\>\""}], "]"}]}], "}"}], 
   "\[IndentingNewLine]", " ", ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<lambda\>\"", ",", " ", "\"\<Mean Delay\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.752187692698505*^9, 3.752187694072343*^9}, {
  3.752187725484695*^9, 3.752187727176453*^9}, {3.752187821041276*^9, 
  3.7521878897205143`*^9}, {3.752191715499844*^9, 3.752191716319496*^9}},
 CellLabel->
  "In[139]:=",ExpressionUUID->"501afdbc-5208-45c1-aee7-a9fc6528bcc3"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.2256883538538742, 4.596441585008465}, {0.3, 
          3.3547799586587637`}, {0.4, 2.5011430485526303`}, {0.5, 
          1.9933216962163538`}, {0.6, 1.6726061095338989`}, {0.7, 
          1.4334548331789194`}, {0.8, 1.2473612774109213`}, {0.9, 
          1.1137644294127635`}, {1., 1.00381483334323}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$14009, {1}}]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.123896842680507}, {0.2, 1.2480559120930033`}, {0.3, 
          1.4229465074818277`}, {0.4, 1.7015903873228886`}, {0.5, 
          2.0054859002931162`}, {0.6, 2.483517003132678}, {0.7, 
          3.2647869560608043`}, {0.7816212581451617, 4.596441585008465}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$14009, {2}}]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.1272157754578775`}, {0.2, 1.2509145081864843`}, {
          0.3, 1.3446901270232883`}, {0.4, 1.4176164249610461`}, {0.5, 
          1.3752344073572746`}, {0.6, 1.2778409334279845`}, {0.7, 
          1.1042773575820735`}, {0.8, 0.9003879134371717}, {0.9, 
          0.6534881615301351}, {1., 0.3629764981878238}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$14009, {3}}]& ], 
       TagBox[{
         Hue[0.37820393249936934`, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.1, 1.096405273054176}, {0.2, 1.0905264161846315`}, {0.3, 
          1.1593925854497553`}, {0.4, 1.207175948195043}, {0.5, 
          1.2449274422343681`}, {0.6, 1.3115996672548509`}, {0.7, 
          1.3196240091530071`}, {0.8, 1.29144571072943}, {0.9, 
          1.2227640357528657`}, {1., 1.1321386232574002`}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$14009, {
          4}}]& ]}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 1.}, {0, 4.596441585008465}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"lambda\"", TraditionalForm], 
       FormBox["\"Mean Delay\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {{0, 1.}, {0, 4.596441585008465}},
      PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
      "\"FIFO\"", "\"PS\"", "\"SRPT\"", "\"SRPT (Hyperexp SvcTime)\""}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.922526`", ",", "0.385626`", ",", "0.209179`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                   "}"}]}], "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.752187893081669*^9, 3.75219172724218*^9},
 CellLabel->
  "Out[139]=",ExpressionUUID->"840e2e60-4d6f-4a8b-8245-6b35ebae712e"]
}, Open  ]],

Cell["\<\
We can see the affect of increase/decreasing arrival rate has for throughput. \

1) FIFO works well with higher arrival rate
2) PS works well with lower arrival rate
3) SRPT remain relatively constant as compared to FIFO and PS.\
\>", "Text",
 CellChangeTimes->{{3.7521879155821733`*^9, 3.752188014041388*^9}, {
  3.752191750161923*^9, 
  3.752191761141966*^9}},ExpressionUUID->"8dc4944c-2ebb-4fdb-96d9-\
d7bf8b94e112"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.752187909176156*^9, 
  3.75218791063027*^9}},ExpressionUUID->"bcd74da7-2923-4a90-b71d-\
8b9c2fc7e123"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Question 3 Modified 3-class M/G/1 PS simulator 
class-3 flows arrive according to the Poisson process with rate \[Lambda]_3\
\>", "Section",
 CellChangeTimes->{{3.752151205849225*^9, 3.7521512534550743`*^9}, {
  3.752169183802745*^9, 3.7521692157583017`*^9}, {3.752177436310281*^9, 
  3.752177459355289*^9}},ExpressionUUID->"21062d67-c699-432b-b5a0-\
4cea97940435"],

Cell["\<\
the flows are served at
rate r 3 bit/s. In your implementation you may assume that the sizes L 3 are \
exponentially
distributed (and hence the service times, as well), similarly as in the \
example code. Make the
necessary modifications by following the example implementation of the \
2-class simulator.\
\>", "Text",
 CellChangeTimes->{{3.7521692360986137`*^9, 
  3.75216923871281*^9}},ExpressionUUID->"325a6665-7a4d-4cb9-9a1d-\
2dbdd351c67b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"simulator3classPS", "[", 
   RowBox[{
   "la1_", ",", "la2_", ",", "la3_", ",", "mu1_", ",", "mu2_", ",", "mu3_", 
    ",", "iniTrans_", ",", "simuLen_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "simTime", ",", "meanqlen", ",", "prevEvTime", ",", "nextArr", ",", 
      "nextDep", ",", "\[IndentingNewLine]", "joblist1", ",", "joblist2", ",",
       "joblist3", ",", "\[IndentingNewLine]", "delsum1", ",", "delsum2", ",",
       "delsum3", ",", "\[IndentingNewLine]", "nofsamples1", ",", 
      "nofsamples2", ",", "nofsamples3", ",", "\[IndentingNewLine]", "nn1", 
      ",", "nn2", ",", "nn3", ",", "depInd", ",", "\[IndentingNewLine]", 
      "deptime1", ",", "deptime2", ",", "deptime3", ",", 
      "\[IndentingNewLine]", "i", ",", "latot", ",", "p"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"simTime", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"latot", "=", 
      RowBox[{"la1", "+", "la2", "+", "la3"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"nextArr", "=", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"ExponentialDistribution", "[", "latot", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"nextDep", "=", "Infinity"}], ";", "\[IndentingNewLine]", 
     RowBox[{"joblist1", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"joblist2", "=", 
      RowBox[{"{", "}"}]}], ";", 
     RowBox[{"joblist3", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"meanqlen", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"delsum1", "=", "0"}], ";", 
     RowBox[{"delsum2", "=", "0"}], ";", 
     RowBox[{"delsum3", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nofsamples1", "=", "0"}], ";", 
     RowBox[{"nofsamples2", "=", "0"}], ";", 
     RowBox[{"nofsamples3", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"nn1", "=", "0"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"nof", " ", "flows", " ", "for", " ", "class", " ", "1"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"nn2", "=", "0"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"nof", " ", "flows", " ", "for", " ", "class", " ", "2"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"nn3", "=", "0"}], ";", " ", 
     RowBox[{"(*", " ", 
      RowBox[{"nof", " ", "flows", " ", "for", " ", "class", " ", "3"}], " ", 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{"simTime", "\[LessEqual]", "simuLen"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"nextArr", "<", "nextDep"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"prevEvTime", "=", "simTime"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"simTime", "=", "nextArr"}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanqlen", "+=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
                "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"serve", " ", "flows"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn1", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist1", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist1", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist1", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}]}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"joblist1", "=", 
               RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn2", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist2", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist2", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist2", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}]}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"joblist2", "=", 
               RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn3", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist3", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist3", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist3", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}]}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"joblist3", "=", 
               RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"insert", " ", "new", " ", "arrival"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "Probability", " ", "that", " ", "the", " ", "arrival", " ", 
                 "is", " ", "from", " ", "class", " ", "k", " ", "is", " ", 
                 "then", " ", "simply", " ", 
                 RowBox[{"la_k", "/", "la1"}]}], " ", "+", " ", "la2", " ", 
                "+"}], " ", "..."}], " ", "+", " ", "la_k"}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"p", " ", "=", " ", 
             RowBox[{"RandomReal", "[", "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"p", "<", 
               RowBox[{"la1", "/", 
                RowBox[{"(", 
                 RowBox[{"la1", "+", "la2", "+", "la3"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"joblist1", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"joblist1", ",", 
                   RowBox[{"{", 
                    RowBox[{"simTime", ",", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"ExponentialDistribution", "[", "mu1", "]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"joblist1", "=", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"joblist1", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"nn1", "++"}], ";"}], "\[IndentingNewLine]", "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"la1", "/", 
                RowBox[{"(", 
                 RowBox[{"la1", "+", "la2", "+", "la3"}], ")"}]}], "  ", "<=",
                "p", "  ", "<", "  ", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"la1", "+", "la2"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"la1", "+", "la2", "+", "la3"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"joblist2", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"joblist2", ",", 
                   RowBox[{"{", 
                    RowBox[{"simTime", ",", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"ExponentialDistribution", "[", "mu2", "]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"joblist2", "=", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"joblist2", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"nn2", "++"}], ";"}], "\[IndentingNewLine]", "}"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"p", ">=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"la1", "+", "la2"}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{"la1", "+", "la2", "+", "la3"}], ")"}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"joblist3", "=", 
                 RowBox[{"Append", "[", 
                  RowBox[{"joblist3", ",", 
                   RowBox[{"{", 
                    RowBox[{"simTime", ",", 
                    RowBox[{"RandomVariate", "[", 
                    RowBox[{"ExponentialDistribution", "[", "mu3", "]"}], 
                    "]"}]}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
                RowBox[{"joblist3", "=", 
                 RowBox[{"Sort", "[", 
                  RowBox[{"joblist3", ",", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"#1", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "<", 
                    RowBox[{"#2", "[", 
                    RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"nn3", "++"}], ";"}], "\[IndentingNewLine]", "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"update", " ", "arrival", " ", "event"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"nextArr", "=", 
             RowBox[{"simTime", "+", 
              RowBox[{"RandomVariate", "[", 
               RowBox[{"ExponentialDistribution", "[", "latot", "]"}], 
               "]"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"update", " ", "departure", " ", "event"}], ",", " ", 
              RowBox[{
              "there", " ", "is", " ", "at", " ", "least", " ", "1", " ", 
               "flow", " ", "in", " ", "system"}]}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn1", ">", "0"}], ",", 
              RowBox[{"deptime1", "=", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"joblist1", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}], ",", 
              RowBox[{"deptime1", "=", "Infinity"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn2", ">", "0"}], ",", 
              RowBox[{"deptime2", "=", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"joblist2", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}], ",", 
              RowBox[{"deptime2", "=", "Infinity"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn3", ">", "0"}], ",", 
              RowBox[{"deptime3", "=", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"joblist3", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}], ",", 
              RowBox[{"deptime3", "=", "Infinity"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"deptime1", " ", "\[Equal]", " ", 
               RowBox[{"Min", "[", 
                RowBox[{
                "deptime1", ",", " ", "deptime2", ",", " ", "deptime3"}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nextDep", "=", "deptime1"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"depInd", "=", "1"}], ";"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"deptime2", " ", "\[Equal]", " ", 
               RowBox[{"Min", "[", 
                RowBox[{
                "deptime1", ",", " ", "deptime2", ",", " ", "deptime3"}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nextDep", "=", "deptime2"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"depInd", "=", "2"}], ";"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"deptime3", " ", "\[Equal]", " ", 
               RowBox[{"Min", "[", 
                RowBox[{
                "deptime1", ",", " ", "deptime2", ",", " ", "deptime3"}], 
                "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"nextDep", "=", "deptime3"}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"depInd", "=", "3"}], ";"}], "}"}]}], 
             "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"prevEvTime", "=", "simTime"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"simTime", "=", "nextDep"}], ";", "\[IndentingNewLine]", 
            RowBox[{"meanqlen", "+=", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{"simTime", ",", "simuLen"}], "]"}], "-", 
                "prevEvTime"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"serve", " ", "flows"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn1", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist1", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist1", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist1", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}]}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"joblist1", "=", 
               RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn2", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist2", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist2", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist2", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}]}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"joblist2", "=", 
               RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn3", ">", "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"For", "[", 
               RowBox[{
                RowBox[{"i", "=", "1"}], ",", 
                RowBox[{"i", "\[LessEqual]", 
                 RowBox[{"Length", "[", "joblist3", "]"}]}], ",", 
                RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"joblist3", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "2"}], "]"}], "]"}], "=", 
                 RowBox[{
                  RowBox[{"joblist3", "[", 
                   RowBox[{"[", 
                    RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"simTime", "-", "prevEvTime"}], ")"}], "/", 
                   RowBox[{"(", 
                    RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}]}]}]}]}], 
               "]"}], "\[IndentingNewLine]", ",", 
              RowBox[{"joblist3", "=", 
               RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"collect", " ", "statistics"}], " ", "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"Which", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"depInd", "\[Equal]", "1"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"simTime", ">", "iniTrans"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"delsum1", "+=", 
                    RowBox[{"(", 
                    RowBox[{"simTime", "-", 
                    RowBox[{"joblist1", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"nofsamples1", "++"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"joblist1", "=", 
                 RowBox[{"Delete", "[", 
                  RowBox[{"joblist1", ",", "1"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"nn1", "--"}], ";"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"depInd", "\[Equal]", "2"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"simTime", ">", "iniTrans"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"delsum2", "+=", 
                    RowBox[{"(", 
                    RowBox[{"simTime", "-", 
                    RowBox[{"joblist2", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"nofsamples2", "++"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"joblist2", "=", 
                 RowBox[{"Delete", "[", 
                  RowBox[{"joblist2", ",", "1"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"nn2", "--"}], ";"}], "}"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"depInd", "\[Equal]", "3"}], ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"simTime", ">", "iniTrans"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"delsum3", "+=", 
                    RowBox[{"(", 
                    RowBox[{"simTime", "-", 
                    RowBox[{"joblist3", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ")"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"nofsamples3", "++"}], ";"}]}], 
                 "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                RowBox[{"joblist3", "=", 
                 RowBox[{"Delete", "[", 
                  RowBox[{"joblist3", ",", "1"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"nn3", "--"}], ";"}], "}"}]}], "\[IndentingNewLine]", 
             "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{
              RowBox[{"update", " ", "departure", " ", "event"}], ",", " ", 
              RowBox[{
              "now", " ", "system", " ", "may", " ", "be", " ", "totally", 
               " ", "empty"}]}], " ", "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn1", ">", "0"}], ",", 
              RowBox[{"deptime1", "=", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"joblist1", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"nn1", "+", "nn2"}], ")"}]}]}]}], ",", 
              RowBox[{"deptime1", "=", "Infinity"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn2", ">", "0"}], ",", 
              RowBox[{"deptime2", "=", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"joblist2", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"nn1", "+", "nn2"}], ")"}]}]}]}], ",", 
              RowBox[{"deptime2", "=", "Infinity"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"nn3", ">", "0"}], ",", 
              RowBox[{"deptime3", "=", 
               RowBox[{"simTime", "+", 
                RowBox[{
                 RowBox[{"joblist3", "[", 
                  RowBox[{"[", 
                   RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"nn1", "+", "nn2"}], ")"}]}]}]}], ",", 
              RowBox[{"deptime3", "=", "Infinity"}]}], "]"}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{"nn1", "+", "nn2", "+", "nn3"}], ")"}], ">", "0"}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Which", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"deptime1", " ", "\[Equal]", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                  "deptime1", ",", " ", "deptime2", ",", " ", "deptime3"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"nextDep", "=", "deptime1"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"depInd", "=", "1"}], ";"}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"deptime2", " ", "\[Equal]", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                  "deptime1", ",", " ", "deptime2", ",", " ", "deptime3"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"nextDep", "=", "deptime2"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"depInd", "=", "2"}], ";"}], "}"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"deptime3", " ", "\[Equal]", " ", 
                 RowBox[{"Min", "[", 
                  RowBox[{
                  "deptime1", ",", " ", "deptime2", ",", " ", "deptime3"}], 
                  "]"}]}], ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"nextDep", "=", "deptime3"}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"depInd", "=", "3"}], ";"}], "}"}]}], 
               "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"nextDep", "=", "Infinity"}]}], "\[IndentingNewLine]", 
             "]"}], ";"}], "\[IndentingNewLine]", "}"}]}], 
         "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"meanqlen", "/", 
        RowBox[{"(", 
         RowBox[{"latot", "*", "simuLen"}], ")"}]}], ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"delsum1", "+", "delsum2", "+", "delsum3"}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"nofsamples1", "+", "nofsamples2", "+", "nofsamples3"}], 
         ")"}]}], ",", 
       RowBox[{"delsum1", "/", "nofsamples1"}], ",", 
       RowBox[{"delsum2", "/", "nofsamples2"}], ",", 
       RowBox[{"delsum3", "/", "nofsamples3"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7518894696126823`*^9, 3.751890073493299*^9}, {
  3.7518901324981537`*^9, 3.7518901540642548`*^9}, {3.75189046632008*^9, 
  3.751890478405725*^9}, {3.751890562587734*^9, 3.751890592001556*^9}, {
  3.751890800596097*^9, 3.751890801411664*^9}, {3.751890850609819*^9, 
  3.751890851121078*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"4c508313-c5f7-445a-bf51-c117fd4beb9f"],

Cell["\<\
The sizes in all classes obey the same exponential distribution with mean 1 \
Mbit, i.e., E[L] = 1Mbit.

The service bit rates of all classes are r_1 = 10 Mbit/s, r_2 = 5 Mbit/s and \
r 3 =_1
Mbit/s.

 Also, we fix the arrival rate of classes 1 and 2, such that \[Lambda]_1 = 3 \
and \[Lambda]_2 = 0.5.
 
 Simulate the system as a function of \[Lambda] 3 = {0.05, 0.1, 0.3, 0.5} and \
estimate the throughput
of of each class together with the 95% confidence intervals.\
\>", "Text",
 CellChangeTimes->{{3.7521693090452633`*^9, 
  3.752169383334034*^9}},ExpressionUUID->"f3db2815-473f-4a5c-b07c-\
64497710618a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu1", " ", "=", " ", "10"}], ";", " ", 
  RowBox[{"mu2", " ", "=", " ", "5"}], ";", " ", 
  RowBox[{"mu3", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"la1", " ", "=", " ", "3"}], ";", " ", 
  RowBox[{"la2", " ", "=", " ", "0.5"}], ";", " ", 
  RowBox[{"la3", " ", "=", " ", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lambda3", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{"0.05", ",", "0.1", ",", "0.3", ",", "0.5"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", " ", "=", " ", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"ix", "=", "1"}], ",", " ", 
    RowBox[{"ix", "\[LessEqual]", " ", 
     RowBox[{"Length", "[", "lambda3", "]"}]}], ",", " ", 
    RowBox[{"ix", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"la3", " ", "=", " ", 
      RowBox[{"lambda3", "[", 
       RowBox[{"[", "ix", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"simulator3classPS", "[", 
         RowBox[{
         "la1", ",", "la2", ",", "la3", ",", "mu1", ",", "mu2", ",", "mu3", 
          ",", "200", ",", "2000"}], "]"}], ",", " ", 
        RowBox[{"{", "10", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"resultTable", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"resultTable", ",", " ", "res"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Print", "[", 
      RowBox[{"StringForm", "[", 
       RowBox[{"\"\<When \[Lambda] = ``\>\"", ",", " ", "la3"}], "]"}], "]"}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"means", " ", "=", " ", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"For", "[", 
      RowBox[{
       RowBox[{"i", " ", "=", " ", "3"}], ",", "  ", 
       RowBox[{"i", "\[LessEqual]", " ", "5"}], ",", " ", 
       RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mean", " ", "=", " ", 
         RowBox[{"Mean", "[", 
          RowBox[{"res", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"ci", " ", "=", " ", 
         RowBox[{"MeanCI", "[", 
          RowBox[{"res", "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "i"}], "]"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"Print", "[", 
         RowBox[{"StringForm", "[", 
          RowBox[{
          "\"\<Class = ``, Mean: ``, 95% Confidence Interval = ``\>\"", ",", 
           RowBox[{"i", "-", "2"}], ",", 
           RowBox[{"NumberForm", "[", 
            RowBox[{"mean", ",", " ", "5"}], "]"}], ",", " ", "ci"}], "]"}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"means", " ", "=", " ", 
         RowBox[{"Append", "[", 
          RowBox[{"means", ",", " ", 
           RowBox[{"{", 
            RowBox[{"la3", ",", " ", "mean"}], "}"}]}], "]"}]}], ";"}]}], 
      "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"data", " ", "=", " ", 
      RowBox[{"Append", "[", 
       RowBox[{"data", ",", " ", "means"}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.752169393073083*^9, 3.752169455954254*^9}, {
   3.752169531226575*^9, 3.752169535162189*^9}, 3.7521696187111893`*^9, {
   3.7521696550820932`*^9, 3.752169721940075*^9}, 3.7521703838565493`*^9, {
   3.752170620941029*^9, 3.7521707005045013`*^9}, 3.7521707710349407`*^9, {
   3.7521708391491413`*^9, 3.752170915683176*^9}, {3.752170961105577*^9, 
   3.7521709690385847`*^9}, {3.752171031770616*^9, 3.752171043254991*^9}, {
   3.752171452465914*^9, 3.752171486418755*^9}, {3.7521715814731417`*^9, 
   3.752171613159107*^9}, {3.7521718461432047`*^9, 3.752171896978962*^9}, {
   3.752172534546845*^9, 3.752172539765482*^9}, {3.752172581329081*^9, 
   3.7521725988251953`*^9}},ExpressionUUID->"d208193e-6476-4704-b338-\
1b99a2e146c4"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \
\\!\\(\\*RowBox[{\\\"0.05`\\\"}]\\)\"\>",
  StringForm["When \[Lambda] = ``", 0.05],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172596764955*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"4ceb90c5-90e0-49e3-b1d0-95a276f37e5a"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"1\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.16898\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.16421328212943917`\\\", \\\",\\\", \
\\\"0.1737476885797287`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 1, 
   NumberForm[0.16898048535458393`, 5], {0.16421328212943917`, 
   0.1737476885797287}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172596797718*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"7751109f-dce6-4307-adca-4919d8ff2bea"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"2\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.33085\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.31850156507528404`\\\", \\\",\\\", \
\\\"0.3432066911244933`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 2, 
   NumberForm[0.3308541280998887, 5], {0.31850156507528404`, 
   0.3432066911244933}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172596802454*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"8f5e5500-9725-41b4-ba92-59ec4f402143"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.44963\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.41020281747004944`\\\", \\\",\\\", \
\\\"0.48904965807439676`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 3, 
   NumberForm[0.4496262377722231, 5], {0.41020281747004944`, 
   0.48904965807439676`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172596804497*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"719129ab-3a0b-470e-9581-3fab66202166"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.1`\\\"}]\\)\"\
\>",
  StringForm["When \[Lambda] = ``", 0.1],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172602829432*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"785e6eb0-af87-4b9c-9d62-06cb702c1b27"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"1\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.17399\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.17108864812990593`\\\", \\\",\\\", \
\\\"0.1768985910246761`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 1, 
   NumberForm[0.173993619577291, 5], {0.17108864812990593`, 
   0.1768985910246761}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172602852928*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"51f34046-4db5-4396-8057-14969c947e39"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"2\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.35107\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.34202981427109175`\\\", \\\",\\\", \
\\\"0.36011608071712226`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 2, 
   NumberForm[0.351072947494107, 5], {0.34202981427109175`, 
   0.36011608071712226`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172602855146*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"a1bbbb08-1cce-431b-b71e-d3af66389ca1"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.51215\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.46639878049496863`\\\", \\\",\\\", \
\\\"0.557896115090193`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 3, 
   NumberForm[0.5121474477925808, 5], {0.46639878049496863`, 
   0.557896115090193}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172602856852*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"06d49f55-2a24-4336-a399-8d25450d1826"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.3`\\\"}]\\)\"\
\>",
  StringForm["When \[Lambda] = ``", 0.3],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.7521726093385878`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"c34d02a1-2275-4450-905c-29fd31b0697c"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"1\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.19908\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.19109365246508078`\\\", \\\",\\\", \
\\\"0.20707153374930712`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 1, 
   NumberForm[0.19908259310719395`, 5], {0.19109365246508078`, 
   0.20707153374930712`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172609362973*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"75f4d0cf-6b3d-4694-a9b6-43a26fc06b4b"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"2\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.41861\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.38419984463885826`\\\", \\\",\\\", \
\\\"0.45301978411944566`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 2, 
   NumberForm[0.41860981437915196`, 5], {0.38419984463885826`, 
   0.45301978411944566`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.7521726093655853`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"f252f87b-346a-43a2-b8bc-925f5686c21b"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.61758\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.536182384091522`\\\", \\\",\\\", \\\
\"0.6989700614866216`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 3, 
   NumberForm[0.6175762227890718, 5], {0.536182384091522, 0.6989700614866216}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172609367382*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"278c35d4-93c5-420d-b71b-74f086830e05"],

Cell[BoxData[
 InterpretationBox["\<\"When \[Lambda] = \\!\\(\\*RowBox[{\\\"0.5`\\\"}]\\)\"\
\>",
  StringForm["When \[Lambda] = ``", 0.5],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172616846634*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"2d78fc0d-71aa-434b-8824-57db0374f50a"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"1\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.23479\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.21859604221095522`\\\", \\\",\\\", \
\\\"0.25098171069676445`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 1, 
   NumberForm[0.23478887645385985`, 5], {0.21859604221095522`, 
   0.25098171069676445`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.7521726168767157`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"b49d2a9c-a9bb-4530-a065-7fa29c0ed941"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"2\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.49502\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.44266913032869204`\\\", \\\",\\\", \
\\\"0.5473756661573438`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 2, 
   NumberForm[0.4950223982430179, 5], {0.44266913032869204`, 
   0.5473756661573438}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.752172616878957*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"9b9b0030-2b98-4ff7-8c99-8e94c4b3dc6d"],

Cell[BoxData[
 InterpretationBox["\<\"Class = \\!\\(\\*RowBox[{\\\"3\\\"}]\\), Mean: \\!\\(\
\\*RowBox[{\\\"\\\\\\\"0.82992\\\\\\\"\\\"}]\\), 95% Confidence Interval = \
\\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"0.6479265189889757`\\\", \\\",\\\", \
\\\"1.0119055080054704`\\\"}], \\\"}\\\"}]\\)\"\>",
  StringForm["Class = ``, Mean: ``, 95% Confidence Interval = ``", 3, 
   NumberForm[0.829916013497223, 5], {0.6479265189889757, 
   1.0119055080054704`}],
  Editable->False]], "Print",
 CellChangeTimes->{3.75217145296476*^9, 3.7521714948674097`*^9, 
  3.75217154904305*^9, 3.752171619660387*^9, 3.75217190376733*^9, 
  3.7521726168810673`*^9},
 CellLabel->
  "During evaluation of \
In[83]:=",ExpressionUUID->"1418eae2-23d0-4afb-aca7-a3299e0f8205"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y1", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "1"}], "]"}], "]"}]}], ";", "  ", 
  RowBox[{"y2", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "2"}], "]"}], "]"}]}], ";", " ", 
  RowBox[{"y3", " ", "=", " ", 
   RowBox[{"data", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", " ", "3"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Legended", "[", 
      RowBox[{"y1", ",", " ", "\"\<class 1\>\""}], "]"}], ",", " ", 
     RowBox[{"Legended", "[", 
      RowBox[{"y2", ",", " ", "\"\<class 2\>\""}], "]"}], ",", " ", 
     RowBox[{"Legended", "[", 
      RowBox[{"y3", ",", " ", "\"\<class 3\>\""}], "]"}]}], "}"}], ",", " ", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<lambda3\>\"", ",", " ", "\"\<Mean Delay\>\""}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.7521719479274597`*^9, 3.752172059890994*^9}, {
  3.7521721002602262`*^9, 3.752172152166422*^9}, {3.752172210855888*^9, 
  3.752172252257001*^9}, {3.752172285317626*^9, 3.752172293120234*^9}, {
  3.752172331412488*^9, 3.752172343013435*^9}, {3.752172667397225*^9, 
  3.752172728234272*^9}, {3.752174278289213*^9, 3.7521742952116547`*^9}, {
  3.7521918548534822`*^9, 
  3.7521918555579233`*^9}},ExpressionUUID->"3a0f22f3-21d9-4d25-9bb7-\
cc0458fd5d62"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{}, {{{}, {}, 
       TagBox[{
         Hue[0.67, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.05, 0.16898048535458393`}, {0.1, 0.173993619577291}, {
          0.3, 0.19908259310719395`}, {0.5, 0.23478887645385985`}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$9864, {1}}]& ], 
       TagBox[{
         Hue[0.9060679774997897, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.05, 0.3308541280998887}, {0.1, 0.351072947494107}, {0.3, 
          0.41860981437915196`}, {0.5, 0.4950223982430179}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$9864, {2}}]& ], 
       TagBox[{
         Hue[0.1421359549995791, 0.6, 0.6], 
         Directive[
          PointSize[
           NCache[
            Rational[7, 360], 0.019444444444444445`]], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[{{0.05, 0.4496262377722231}, {0.1, 0.5121474477925808}, {0.3,
           0.6175762227890718}, {0.5, 0.829916013497223}}]}, 
        Annotation[#, {{Legended}, Charting`Private`Tag$9864, {
          3}}]& ]}}, {}, {}, {}, {}}, {
    DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, AxesOrigin -> {0, 0}, 
     PlotRange -> {{0, 0.5}, {0, 0.829916013497223}}, PlotRangeClipping -> 
     True, ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"lambda3\"", TraditionalForm], 
       FormBox["\"Mean Throughput\"", TraditionalForm]}, AxesOrigin -> {0, 0},
      DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 0.5}, {0, 0.829916013497223}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"class 1\"", "\"class 2\"", "\"class 3\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[
                    NCache[
                    Rational[7, 20], 0.35]], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", 
                    FractionBox["7", "360"], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"None", ",", "Automatic"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{"True", ",", "True", ",", "True"}], "}"}]}], 
               "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.752171964692985*^9, {3.752172026588188*^9, 3.7521720605784693`*^9}, {
   3.7521721026215963`*^9, 3.7521721133793087`*^9}, {3.7521721464644136`*^9, 
   3.75217215268209*^9}, {3.752172229879538*^9, 3.7521722528232937`*^9}, {
   3.752172332834435*^9, 3.75217234339109*^9}, {3.752172655925022*^9, 
   3.7521727288352222`*^9}, 3.752174295892576*^9},
 CellLabel->
  "Out[106]=",ExpressionUUID->"600043ae-129e-400c-8754-69b6bea58afd"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.7521722527737513`*^9, {3.7521723226207*^9, 3.7521723243946257`*^9}, 
   3.75217273457724*^9},
 CellLabel->
  "In[104]:=",ExpressionUUID->"11012cd1-f94f-4735-a981-5b7fbbb099b3"]
}, Open  ]]
},
WindowSize->{1853, 1025},
WindowMargins->{{0, Automatic}, {0, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/adam/Downloads/print.pdf"},
FrontEndVersion->"11.3 for Linux x86 (64-bit) (March 6, 2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 251, 4, 197, "Text",ExpressionUUID->"b5259b61-7913-4f0e-b51a-61043a80bcab"],
Cell[CellGroupData[{
Cell[834, 28, 239, 4, 68, "Section",ExpressionUUID->"d1189b23-1956-46f6-9fb1-d8605795aa86"],
Cell[1076, 34, 472, 13, 173, "Text",ExpressionUUID->"4b8069bb-f7e0-49b5-a4d3-ae90d9e35ed0"],
Cell[1551, 49, 10844, 245, 1274, "Input",ExpressionUUID->"7091be15-9421-46d6-9251-3b27fa9e59b9"],
Cell[12398, 296, 302, 9, 104, "Text",ExpressionUUID->"2595ac15-118f-45df-a817-5e0b0e9de5c9"],
Cell[CellGroupData[{
Cell[12725, 309, 1513, 38, 170, "Input",ExpressionUUID->"08740fb3-1905-4a7e-9d25-8aac31a414d8"],
Cell[CellGroupData[{
Cell[14263, 351, 681, 13, 25, "Print",ExpressionUUID->"7cb9c492-de6f-4586-abbb-b2574b6bba7d"],
Cell[14947, 366, 681, 13, 25, "Print",ExpressionUUID->"d1d22e21-b89b-4ade-980c-d44f024c36eb"],
Cell[15631, 381, 672, 12, 25, "Print",ExpressionUUID->"9862d4c7-a796-43c5-990b-7ab0924a55ef"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16364, 400, 285, 7, 68, "Section",ExpressionUUID->"fbce99f6-e3fd-4194-b545-60cabfc7afce"],
Cell[16652, 409, 1094, 24, 288, "Text",ExpressionUUID->"475e41a4-5816-4ec4-913f-e70c34b2907d"],
Cell[17749, 435, 12217, 272, 1481, "Input",ExpressionUUID->"ebccdfd6-a9e4-45c9-aa0e-6b82a23604eb"],
Cell[29969, 709, 336, 9, 81, "Text",ExpressionUUID->"6fbb043e-367d-4369-9f94-9eecdf00e339"],
Cell[CellGroupData[{
Cell[30330, 722, 1550, 39, 170, "Input",ExpressionUUID->"08deb3db-b613-4fd2-a68f-a3fa5eb8a976"],
Cell[CellGroupData[{
Cell[31905, 765, 682, 13, 25, "Print",ExpressionUUID->"93d7e731-c69d-42f2-ba1a-79266ae6444c"],
Cell[32590, 780, 678, 13, 25, "Print",ExpressionUUID->"18fe6140-8055-4272-ba45-d04abaf90cc6"],
Cell[33271, 795, 672, 12, 25, "Print",ExpressionUUID->"63ebfade-a34c-4ac4-a751-a294511cb3e4"]
}, Open  ]]
}, Open  ]],
Cell[33970, 811, 246, 4, 35, "Text",ExpressionUUID->"c5aa9b33-2cd1-4b94-aecd-c7d86fedeb78"],
Cell[CellGroupData[{
Cell[34241, 819, 1515, 38, 170, "Input",ExpressionUUID->"188c7fe9-f83f-4406-864a-a3dfae9062f0"],
Cell[CellGroupData[{
Cell[35781, 861, 681, 13, 25, "Print",ExpressionUUID->"4a08ced9-48a9-48fc-ae1d-2061059071f1"],
Cell[36465, 876, 682, 13, 25, "Print",ExpressionUUID->"5d9b92db-e299-44d3-ab6f-9b4f985562ed"],
Cell[37150, 891, 675, 13, 25, "Print",ExpressionUUID->"51107f98-8cd2-40f4-970c-0b4015419eff"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[37886, 911, 318, 8, 146, "Section",ExpressionUUID->"abcd7da8-05b9-4183-9b79-9c660c1dee1c"],
Cell[38207, 921, 687, 18, 196, "Text",ExpressionUUID->"a8488733-1b1b-4cae-b425-a34669bcb102"],
Cell[38897, 941, 13582, 265, 1458, "Input",ExpressionUUID->"19316f4f-a90f-465a-beff-987339e013c3"],
Cell[52482, 1208, 10902, 245, 1251, "Input",ExpressionUUID->"4915a833-3832-4315-bd2f-4691bc3c6fa2"],
Cell[63387, 1455, 298, 9, 127, "Text",ExpressionUUID->"995b93a9-18da-4e31-ae31-71125acb67d7"],
Cell[63688, 1466, 10143, 230, 1205, "Input",ExpressionUUID->"5b8f4a14-4e26-46e1-b545-b1787fbdd3a5"],
Cell[CellGroupData[{
Cell[73856, 1700, 4453, 108, 515, "Input",ExpressionUUID->"2af99460-b595-4ca7-a7f2-94022852c28d"],
Cell[CellGroupData[{
Cell[78334, 1812, 326, 8, 25, "Print",ExpressionUUID->"ab875374-343a-4551-a33b-d8e51a533abd"],
Cell[78663, 1822, 625, 12, 25, "Print",ExpressionUUID->"e6d280aa-0e6c-4eb2-9644-3c56b68c5483"],
Cell[79291, 1836, 622, 12, 25, "Print",ExpressionUUID->"07f24a47-d927-434b-8f85-b2ecf3ea7856"],
Cell[79916, 1850, 637, 13, 25, "Print",ExpressionUUID->"add81d06-8a6e-4095-8d0b-8b4018e515ce"],
Cell[80556, 1865, 326, 8, 25, "Print",ExpressionUUID->"bbae0af5-dad7-40eb-951c-f1563b0abe18"],
Cell[80885, 1875, 635, 13, 25, "Print",ExpressionUUID->"5a021bec-60c6-4bf4-85a0-2fdac087d685"],
Cell[81523, 1890, 546, 12, 25, "Print",ExpressionUUID->"b97fa222-1636-4d0f-af48-2b44f4646af3"],
Cell[82072, 1904, 635, 13, 25, "Print",ExpressionUUID->"2a074d74-29fc-4256-b107-1a27052474ee"],
Cell[82710, 1919, 328, 8, 25, "Print",ExpressionUUID->"9fb4852b-1db8-4f4a-9659-85de06963192"],
Cell[83041, 1929, 630, 13, 25, "Print",ExpressionUUID->"191c529f-5941-4702-969d-ea4c84e62c2c"],
Cell[83674, 1944, 619, 12, 25, "Print",ExpressionUUID->"e30f6d4c-dd64-49e6-a9d4-b82aa8c999f1"],
Cell[84296, 1958, 635, 13, 25, "Print",ExpressionUUID->"3a53c5a9-18a3-433c-bacc-734bd5acdeb1"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[84992, 1978, 329, 8, 146, "Section",ExpressionUUID->"599ded39-9cdc-4cba-8054-0a04f72f2d17"],
Cell[85324, 1988, 34250, 749, 4080, "Input",ExpressionUUID->"bbab74b1-26a8-40ce-a07d-345801f6f2a0"],
Cell[CellGroupData[{
Cell[119599, 2741, 4344, 109, 515, "Input",ExpressionUUID->"e2b4194b-8929-4e83-aaf5-87e7b180cdd9"],
Cell[CellGroupData[{
Cell[123968, 2854, 397, 9, 25, "Print",ExpressionUUID->"2c7dc8bb-93ab-499e-a172-57e2fd98a4b9"],
Cell[124368, 2865, 771, 15, 25, "Print",ExpressionUUID->"3bf570ff-ff3a-4dd6-af4f-71ea498b9b07"],
Cell[125142, 2882, 774, 15, 25, "Print",ExpressionUUID->"d98c761a-0aba-426e-8fef-ba79de136195"],
Cell[125919, 2899, 775, 16, 25, "Print",ExpressionUUID->"0b681112-da07-4446-a1ec-8d208905c89b"],
Cell[126697, 2917, 399, 9, 25, "Print",ExpressionUUID->"d4772f19-00b3-4acf-9598-d817357c9f3a"],
Cell[127099, 2928, 777, 16, 25, "Print",ExpressionUUID->"df81e190-cf28-4cac-89ab-f628ba7f8a4b"],
Cell[127879, 2946, 763, 14, 25, "Print",ExpressionUUID->"59edd711-411f-4d99-8d59-f61350dd7ed5"],
Cell[128645, 2962, 776, 16, 25, "Print",ExpressionUUID->"7ca0ef72-7e08-4d4b-8da5-1d92dd817409"],
Cell[129424, 2980, 397, 9, 25, "Print",ExpressionUUID->"aaff8a28-348d-4cd6-8923-b0917ffe4e6c"],
Cell[129824, 2991, 769, 15, 25, "Print",ExpressionUUID->"6fe2884d-db92-425a-8023-dd574a4c8923"],
Cell[130596, 3008, 763, 14, 25, "Print",ExpressionUUID->"d73de247-d0e9-4c04-ac84-011738c3cc1f"],
Cell[131362, 3024, 778, 16, 25, "Print",ExpressionUUID->"0fde786c-d38c-4867-b6ac-7259122640a7"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[132201, 3047, 347, 5, 68, "Section",ExpressionUUID->"90de587d-fe58-46fd-9011-7db821c66911"],
Cell[132551, 3054, 669, 14, 127, "Text",ExpressionUUID->"91aae3e9-5ec7-43a9-92bc-a186cee10775"],
Cell[133223, 3070, 6278, 168, 699, "Input",ExpressionUUID->"825330d7-f206-4e6e-a460-e32117ad85d4"],
Cell[CellGroupData[{
Cell[139526, 3242, 2123, 59, 78, "Input",ExpressionUUID->"309735b2-0d14-4101-a81b-b8f58b0f2849"],
Cell[141652, 3303, 19320, 394, 235, "Output",ExpressionUUID->"7a0e41b3-a6d6-4d9e-975f-db39ff9ead10"],
Cell[160975, 3699, 19360, 395, 235, "Output",ExpressionUUID->"6d1b7c6d-0c91-4081-8ec6-7c6bf9d00131"],
Cell[180338, 4096, 19403, 396, 238, "Output",ExpressionUUID->"7d3dfd9c-bf4f-4492-b36f-499f4237db3a"]
}, Open  ]],
Cell[199756, 4495, 284, 6, 35, "Text",ExpressionUUID->"810d0e23-b678-4756-923b-26bc1af04295"],
Cell[CellGroupData[{
Cell[200065, 4505, 1258, 34, 55, "Input",ExpressionUUID->"501afdbc-5208-45c1-aee7-a9fc6528bcc3"],
Cell[201326, 4541, 33606, 674, 235, "Output",ExpressionUUID->"840e2e60-4d6f-4a8b-8245-6b35ebae712e"]
}, Open  ]],
Cell[234947, 5218, 429, 10, 104, "Text",ExpressionUUID->"8dc4944c-2ebb-4fdb-96d9-d7bf8b94e112"],
Cell[235379, 5230, 151, 3, 31, "Input",ExpressionUUID->"bcd74da7-2923-4a90-b71d-8b9c2fc7e123"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235567, 5238, 375, 7, 107, "Section",ExpressionUUID->"21062d67-c699-432b-b5a0-4cea97940435"],
Cell[235945, 5247, 456, 11, 104, "Text",ExpressionUUID->"325a6665-7a4d-4cb9-9a1d-2dbdd351c67b"],
Cell[236404, 5260, 28747, 626, 3298, "Input",ExpressionUUID->"4c508313-c5f7-445a-bf51-c117fd4beb9f"],
Cell[265154, 5888, 621, 17, 219, "Text",ExpressionUUID->"f3db2815-473f-4a5c-b07c-64497710618a"],
Cell[CellGroupData[{
Cell[265800, 5909, 4124, 93, 446, "Input",ExpressionUUID->"d208193e-6476-4704-b338-1b99a2e146c4"],
Cell[CellGroupData[{
Cell[269949, 6006, 433, 10, 25, "Print",ExpressionUUID->"4ceb90c5-90e0-49e3-b1d0-95a276f37e5a"],
Cell[270385, 6018, 752, 14, 25, "Print",ExpressionUUID->"7751109f-dce6-4307-adca-4919d8ff2bea"],
Cell[271140, 6034, 750, 14, 25, "Print",ExpressionUUID->"8f5e5500-9725-41b4-ba92-59ec4f402143"],
Cell[271893, 6050, 753, 14, 25, "Print",ExpressionUUID->"719129ab-3a0b-470e-9581-3fab66202166"],
Cell[272649, 6066, 431, 10, 25, "Print",ExpressionUUID->"785e6eb0-af87-4b9c-9d62-06cb702c1b27"],
Cell[273083, 6078, 749, 14, 25, "Print",ExpressionUUID->"51f34046-4db5-4396-8057-14969c947e39"],
Cell[273835, 6094, 752, 14, 25, "Print",ExpressionUUID->"a1bbbb08-1cce-431b-b71e-d3af66389ca1"],
Cell[274590, 6110, 748, 14, 25, "Print",ExpressionUUID->"06d49f55-2a24-4336-a399-8d25450d1826"],
Cell[275341, 6126, 433, 10, 25, "Print",ExpressionUUID->"c34d02a1-2275-4450-905c-29fd31b0697c"],
Cell[275777, 6138, 755, 14, 25, "Print",ExpressionUUID->"75f4d0cf-6b3d-4694-a9b6-43a26fc06b4b"],
Cell[276535, 6154, 757, 14, 25, "Print",ExpressionUUID->"f252f87b-346a-43a2-b8bc-925f5686c21b"],
Cell[277295, 6170, 741, 13, 25, "Print",ExpressionUUID->"278c35d4-93c5-420d-b71b-74f086830e05"],
Cell[278039, 6185, 431, 10, 25, "Print",ExpressionUUID->"2d78fc0d-71aa-434b-8824-57db0374f50a"],
Cell[278473, 6197, 757, 14, 25, "Print",ExpressionUUID->"b49d2a9c-a9bb-4530-a065-7fa29c0ed941"],
Cell[279233, 6213, 750, 14, 25, "Print",ExpressionUUID->"9b9b0030-2b98-4ff7-8c99-8e94c4b3dc6d"],
Cell[279986, 6229, 749, 14, 25, "Print",ExpressionUUID->"1418eae2-23d0-4afb-aca7-a3299e0f8205"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[280784, 6249, 1476, 36, 55, "Input",ExpressionUUID->"3a0f22f3-21d9-4d25-9bb7-cc0458fd5d62"],
Cell[282263, 6287, 26245, 535, 223, "Output",ExpressionUUID->"600043ae-129e-400c-8754-69b6bea58afd"]
}, Open  ]],
Cell[308523, 6825, 227, 5, 31, "Input",ExpressionUUID->"11012cd1-f94f-4735-a981-5b7fbbb099b3"]
}, Open  ]]
}
]
*)

